<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>لوحة الإدارة - المختبِرون</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'arabic': ['Segoe UI', 'Tahoma', 'Arial', 'sans-serif']
                    }
                }
            }
        }
    </script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Arial, sans-serif;
        }

        .tooltip {
            visibility: hidden;
            opacity: 0;
            transition: all 0.3s;
        }

        .tooltip-trigger:hover .tooltip {
            visibility: visible;
            opacity: 1;
        }

        .live-search {
            transition: all 0.3s ease;
        }

        .status-badge {
            transition: all 0.2s ease;
        }

        .hover-card {
            transform: translateY(0);
            transition: all 0.2s ease;
        }

        .hover-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        /* تحسينات التصميم */
        .glass-effect {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.9);
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .card-shadow {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        .card-shadow-hover {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }

        /* تحسين الجدول */
        .table-row:hover {
            background: linear-gradient(90deg, rgba(59, 130, 246, 0.05) 0%, rgba(59, 130, 246, 0.02) 100%);
        }

        .sticky-header {
            position: sticky;
            top: 0;
            z-index: 10;
        }

        /* تحسين الأزرار */
        .btn-primary {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);
        }

        /* تحسين البحث */
        .search-container {
            position: relative;
        }

        .search-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e5e7eb;
            border-top: none;
            border-radius: 0 0 0.5rem 0.5rem;
            max-height: 200px;
            overflow-y: auto;
            z-index: 20;
            display: none;
        }

        .search-suggestion {
            padding: 0.75rem 1rem;
            cursor: pointer;
            border-bottom: 1px solid #f3f4f6;
        }

        .search-suggestion:hover {
            background: #f9fafb;
        }

        .search-suggestion:last-child {
            border-bottom: none;
        }

        /* تحسين الفلاتر */
        .filter-chip {
            background: #eff6ff;
            color: #1d4ed8;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            transition: all 0.2s;
        }

        .filter-chip:hover {
            background: #dbeafe;
        }

        .filter-chip .remove {
            cursor: pointer;
            font-weight: bold;
        }

        /* تحسين التنبيهات */
        .alert-slide {
            transform: translateY(-100%);
            transition: transform 0.3s ease-in-out;
        }

        .alert-slide.show {
            transform: translateY(0);
        }

        /* تحسين الإحصاءات */
        .stat-card {
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%);
            border: 1px solid rgba(59, 130, 246, 0.2);
        }

        /* تحسين التحميل */
        .loading-spinner {
            border: 2px solid #f3f4f6;
            border-top: 2px solid #3b82f6;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        /* تحسين الاستجابة */
        @media (max-width: 768px) {
            .mobile-hidden {
                display: none;
            }

            .mobile-full {
                width: 100%;
            }
        }

        /* تحسين إمكانية الوصول */
        .focus-visible:focus {
            outline: 2px solid #3b82f6;
            outline-offset: 2px;
        }

        /* تحسين الرسوم البيانية */
        .progress-ring {
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
        }

        /* تحسين القوائم المنسدلة */
        .dropdown-enter {
            opacity: 0;
            transform: scale(0.95);
        }

        .dropdown-enter-active {
            opacity: 1;
            transform: scale(1);
            transition: all 0.1s ease-out;
        }

        /* تحسين الكروت */
        .card-hover {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .card-hover:hover {
            transform: translateY(-4px) scale(1.02);
        }
    </style>
</head>

<body class="bg-gray-50 font-arabic">
    <!-- شريط التنبيه المحسن -->
    <div id="alertBar" class="fixed top-0 left-0 right-0 z-50 alert-slide">
        <div class="bg-green-500 text-white p-4 text-center shadow-lg">
            <div class="flex items-center justify-center gap-3">
                <span id="alertIcon">✅</span>
                <span id="alertMessage">تم التحديث بنجاح</span>
                <button onclick="hideAlert()" class="mr-4 text-white hover:text-gray-200">
                    ✕
                </button>
            </div>
        </div>
    </div>

    <div class="container mx-auto px-6 py-8 max-w-7xl">
        <!-- الشريط العلوي المحسن -->
        <div class="glass-effect rounded-xl card-shadow p-6 mb-6 border border-white/20">
            <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4 mb-6">
                <div class="flex items-center gap-4">
                    <div
                        class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center text-white text-xl">
                        👥
                    </div>
                    <div>
                        <h1
                            class="text-3xl font-bold bg-gradient-to-r from-gray-800 to-gray-600 bg-clip-text text-transparent">
                            المختبِرون</h1>
                        <p class="text-gray-600 text-sm">إدارة وتتبع نتائج الاختبارات النفسية</p>
                    </div>
                </div>
                <div class="flex flex-wrap gap-3">
                    <button onclick="refreshData()"
                        class="btn-primary text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-all hover:scale-105 focus-visible">
                        <div id="refreshSpinner" class="loading-spinner hidden"></div>
                        <span id="refreshIcon">⟳</span>
                        <span class="mobile-hidden">تحديث البيانات</span>
                    </button>
                    <div class="relative">
                        <button onclick="toggleExportMenu()"
                            class="bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-all hover:scale-105">
                            <span>📊</span>
                            <span class="mobile-hidden">تصدير</span>
                            <span>▼</span>
                        </button>
                        <div id="exportMenu"
                            class="hidden absolute top-full mt-2 left-0 bg-white rounded-lg shadow-xl border border-gray-200 min-w-48 z-20">
                            <button onclick="exportCSV()"
                                class="w-full text-right px-4 py-3 hover:bg-gray-50 flex items-center gap-3 border-b border-gray-100">
                                <span>📄</span> تصدير CSV
                            </button>
                            <button onclick="exportPDF()"
                                class="w-full text-right px-4 py-3 hover:bg-gray-50 flex items-center gap-3 border-b border-gray-100">
                                <span>📋</span> تصدير PDF
                            </button>
                            <button onclick="exportExcel()"
                                class="w-full text-right px-4 py-3 hover:bg-gray-50 flex items-center gap-3">
                                <span>📊</span> تصدير Excel
                            </button>
                        </div>
                    </div>
                    <button onclick="openSettings()"
                        class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-all hover:scale-105">
                        <span>⚙️</span>
                        <span class="mobile-hidden">الإعدادات</span>
                    </button>
                </div>
            </div>
            <% const all=JSON.parse(data).length,comp=JSON.parse(data).filter(x=>
                (x.status == 'completed')).length,inP=JSON.parse(data).filter(x=>
                (x.status == 'in-progress')).length,notS = all - comp - inP %>

                <!-- العدّادات المحسنة -->
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                    <div class="stat-card p-6 rounded-xl text-center card-hover cursor-pointer"
                        onclick="filterByStatus('')">
                        <div class="flex items-center justify-center mb-3">
                            <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                                <span class="text-blue-600 text-xl">👥</span>
                            </div>
                        </div>
                        <div class="text-3xl font-bold text-blue-600 mb-1" id="totalCount">
                            <%-all%>
                        </div>
                        <div class="text-gray-600 text-sm">إجمالي المختبِرين</div>
                        <div class="mt-2 text-xs text-gray-500">انقر للعرض الكامل</div>
                    </div>
                    <div class="stat-card p-6 rounded-xl text-center card-hover cursor-pointer"
                        onclick="filterByStatus('completed')">
                        <div class="flex items-center justify-center mb-3">
                            <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                                <span class="text-green-600 text-xl">✅</span>
                            </div>
                        </div>
                        <div class="text-3xl font-bold text-green-600 mb-1" id="completedCount"><%-comp%></div>
                        <div class="text-gray-600 text-sm">المكتملون</div>
                        <div class="mt-2">
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-green-500 h-2 rounded-full" style="width: <%-Math.ceil(comp/all)%>%">
                                </div>
                            </div>
                            <div class="text-xs text-gray-500 mt-1"><%-Math.ceil(comp /all)%>% من الإجمالي</div>
                        </div>
                    </div>
                    <div class="stat-card p-6 rounded-xl text-center card-hover cursor-pointer"
                        onclick="filterByStatus('in-progress')">
                        <div class="flex items-center justify-center mb-3">
                            <div class="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center">
                                <span class="text-yellow-600 text-xl">⏳</span>
                            </div>
                        </div>
                        <div class="text-3xl font-bold text-yellow-600 mb-1" id="inProgressCount"><%-inP%></div>
                        <div class="text-gray-600 text-sm">قيد التقدّم</div>
                        <div class="mt-2">
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-yellow-500 h-2 rounded-full" style="width: <%-Math.ceil(inP/all)%>%">
                                </div>
                            </div>
                            <div class="text-xs text-gray-500 mt-1"><%-Math.ceil(inP /all)%>% من الإجمالي</div>
                        </div>
                    </div>
                    <div class="stat-card p-6 rounded-xl text-center card-hover cursor-pointer"
                        onclick="filterByStatus('not-started')">
                        <div class="flex items-center justify-center mb-3">
                            <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center">
                                <span class="text-gray-600 text-xl">⏸️</span>
                            </div>
                        </div>
                        <div class="text-3xl font-bold text-gray-600 mb-1" id="notStartedCount"><%-notS%></div>
                        <div class="text-gray-600 text-sm">لم يبدأوا</div>
                        <div class="mt-2">
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-gray-500 h-2 rounded-full" style="width: <%-Math.ceil(notS/all)%>%">
                                </div>
                            </div>
                            <div class="text-xs text-gray-500 mt-1"><%-Math.ceil(notS /all)%>% من الإجمالي</div>
                        </div>
                    </div>
                </div>
        </div>

        <!-- شريط الإحصاءات السريعة -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">إحصاءات سريعة</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                    <div class="text-sm text-gray-600 mb-2">متوسط مدة الإنجاز</div>
                    <div class="text-xl font-bold text-blue-600">45 دقيقة</div>
                </div>
                <div>
                    <div class="text-sm text-gray-600 mb-2">أكثر أبعاد RIASEC شيوعًا</div>
                    <div class="flex gap-2">
                        <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm">I</span>
                        <span class="bg-green-100 text-green-800 px-2 py-1 rounded text-sm">A</span>
                        <span class="bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm">S</span>
                    </div>
                </div>
                <div>
                    <div class="text-sm text-gray-600 mb-2">أكثر أنواع MBTI شيوعًا</div>
                    <div class="flex gap-2">
                        <span class="bg-indigo-100 text-indigo-800 px-2 py-1 rounded text-sm">INFP</span>
                        <span class="bg-teal-100 text-teal-800 px-2 py-1 rounded text-sm">ISTJ</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- شريط البحث والتصفية المحسن -->
        <div class="bg-white rounded-xl shadow-sm p-6 mb-6 border border-gray-100">
            <!-- البحث المتقدم -->
            <div class="mb-6">
                <label class="block text-sm font-medium text-gray-700 mb-3">🔍 البحث السريع</label>
                <div class="search-container">
                    <div class="relative">
                        <input type="text" id="searchInput" placeholder="ابحث بالاسم، المعرّف، أو نوع الشخصية..."
                            class="w-full pr-12 pl-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 live-search text-lg"
                            oninput="liveSearch(this.value)" onfocus="showSearchSuggestions()"
                            onblur="hideSearchSuggestions()">
                        <div class="absolute inset-y-0 right-0 pr-4 flex items-center">
                            <span class="text-gray-400 text-xl">🔍</span>
                        </div>
                        <div class="absolute inset-y-0 left-0 pl-4 flex items-center">
                            <button onclick="clearSearch()" id="clearSearchBtn"
                                class="hidden text-gray-400 hover:text-gray-600">
                                ✕
                            </button>
                        </div>
                    </div>
                    <div id="searchSuggestions" class="search-suggestions">
                        <!-- اقتراحات البحث -->
                    </div>
                </div>
            </div>

            <!-- الفلاتر النشطة -->
            <div id="activeFilters" class="mb-4 hidden">
                <div class="flex items-center gap-2 mb-2">
                    <span class="text-sm text-gray-600">الفلاتر النشطة:</span>
                    <button onclick="clearAllFilters()" class="text-xs text-blue-600 hover:text-blue-800">مسح
                        الكل</button>
                </div>
                <div id="filterChips" class="flex flex-wrap gap-2">
                    <!-- رقائق الفلاتر -->
                </div>
            </div>

            <!-- الفلاتر -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">📊 الحالة</label>
                    <select id="statusFilter" onchange="applyFilters()"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all">
                        <option value="">جميع الحالات</option>
                        <option value="completed">✅ مكتمل</option>
                        <option value="in-progress">⏳ قيد التقدّم</option>
                        <option value="not-started">⏸️ لم يبدأ</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">📅 المدة الزمنية</label>
                    <select id="timeFilter" onchange="applyFilters()"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all">
                        <option value="">جميع الأوقات</option>
                        <option value="today">🌅 اليوم</option>
                        <option value="week">📅 هذا الأسبوع</option>
                        <option value="month">🗓️ هذا الشهر</option>
                        <option value="custom">⚙️ مخصّص</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">🧪 نوع النتائج</label>
                    <select id="resultTypeFilter" onchange="applyFilters()"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all">
                        <option value="">جميع الأنواع</option>
                        <option value="riasec-only">🔬 RIASEC فقط</option>
                        <option value="mbti-only">🧠 MBTI فقط</option>
                        <option value="both">🎯 كليهما</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">🔄 ترتيب حسب</label>
                    <select id="sortFilter" onchange="applyFilters()"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 transition-all">
                        <option value="name">🔤 الاسم (أبجدي)</option>
                        <option value="newest">🆕 الأحدث</option>
                        <option value="oldest">⏰ الأقدم</option>
                        <option value="completion">📈 نسبة الاكتمال الأعلى</option>
                    </select>
                </div>
            </div>

            <!-- إحصاءات البحث -->
            <div class="mt-4 p-3 bg-gray-50 rounded-lg">
                <div class="flex justify-between items-center text-sm">
                    <span class="text-gray-600">
                        عرض <span id="filteredCount" class="font-semibold text-blue-600"><%-all%></span> من أصل
                        <span id="totalStudents" class="font-semibold"><%-all%></span> طالب
                    </span>
                    <div class="flex gap-2">
                        <button onclick="saveCurrentView()" class="text-blue-600 hover:text-blue-800 text-xs">
                            💾 حفظ العرض
                        </button>
                        <button onclick="resetView()" class="text-gray-600 hover:text-gray-800 text-xs">
                            🔄 إعادة تعيين
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- شريط العمليات الجماعية -->
        <div id="bulkActions" class="hidden bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
            <div class="flex justify-between items-center">
                <span class="text-blue-800">تم تحديد <span id="selectedCount">0</span> عنصر</span>
                <div class="flex gap-3">
                    <button onclick="exportSelected()"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm transition-colors">
                        تصدير المحدّد
                    </button>
                    <button onclick="copySelectedLinks()"
                        class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm transition-colors">
                        نسخ روابط النتائج
                    </button>
                    <button onclick="sendBulkReminder()"
                        class="bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 rounded-lg text-sm transition-colors">
                        إرسال تذكير جماعي
                    </button>
                </div>
            </div>
        </div>

        <!-- جدول المختبِرين المحسن -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden border border-gray-100">
            <!-- شريط أدوات الجدول -->
            <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
                <div class="flex justify-between items-center">
                    <div class="flex items-center gap-4">
                        <h3 class="text-lg font-semibold text-gray-800">قائمة المختبِرين</h3>
                        <div class="flex items-center gap-2">
                            <button onclick="toggleTableView('grid')" id="gridViewBtn"
                                class="p-2 text-gray-500 hover:text-blue-600 transition-colors">
                                <span>⊞</span>
                            </button>
                            <button onclick="toggleTableView('table')" id="tableViewBtn"
                                class="p-2 text-blue-600 transition-colors">
                                <span>☰</span>
                            </button>
                        </div>
                    </div>
                    <div class="flex items-center gap-3">
                        <button onclick="toggleColumnSettings()"
                            class="text-sm text-gray-600 hover:text-gray-800 flex items-center gap-1">
                            <span>⚙️</span> الأعمدة
                        </button>
                        <button onclick="refreshTable()"
                            class="text-sm text-blue-600 hover:text-blue-800 flex items-center gap-1">
                            <span>🔄</span> تحديث
                        </button>
                    </div>
                </div>
            </div>

            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gradient-to-r from-gray-50 to-gray-100 sticky-header">
                        <tr>
                            <th class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <div class="flex items-center gap-2">
                                    <input type="checkbox" id="selectAll" onchange="toggleSelectAll()"
                                        class="rounded focus:ring-2 focus:ring-blue-500">
                                    <span class="mobile-hidden">تحديد</span>
                                </div>
                            </th>
                            <th class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-200 transition-colors"
                                onclick="sortBy('name')">
                                <div class="flex items-center gap-2">
                                    <span>👤 الاسم الكامل</span>
                                    <span id="nameSortIcon">↕️</span>
                                </div>
                            </th>
                            <th
                                class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider mobile-hidden">
                                🆔 المعرّف
                            </th>
                            <th class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-200 transition-colors"
                                onclick="sortBy('status')">
                                <div class="flex items-center gap-2">
                                    <span>📊 الحالة</span>
                                    <span id="statusSortIcon">↕️</span>
                                </div>
                            </th>
                            <th class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-200 transition-colors mobile-hidden"
                                onclick="sortBy('completion')">
                                <div class="flex items-center gap-2">
                                    <span>📈 نسبة الاكتمال</span>
                                    <span id="completionSortIcon">↕️</span>
                                </div>
                            </th>
                            <th
                                class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider mobile-hidden">
                                🔬 أبعاد RIASEC
                            </th>
                            <th
                                class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider mobile-hidden">
                                🧠 نوع MBTI
                            </th>
                            <th class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider mobile-hidden cursor-pointer hover:bg-gray-200 transition-colors"
                                onclick="sortBy('startTime')">
                                <div class="flex items-center gap-2">
                                    <span>⏰ وقت البدء</span>
                                    <span id="startTimeSortIcon">↕️</span>
                                </div>
                            </th>
                            <th
                                class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider mobile-hidden">
                                ✅ وقت الإكمال
                            </th>
                            <th class="px-6 py-4 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                ⚙️ إجراءات
                            </th>
                        </tr>
                    </thead>
                    <tbody id="studentsTable" class="bg-white divide-y divide-gray-200">
                        <!-- سيتم ملء البيانات هنا -->
                    </tbody>
                </table>
            </div>

            <!-- التنقّل بين الصفحات -->
            <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
                <div class="flex-1 flex justify-between sm:hidden">
                    <button onclick="previousPage()"
                        class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        السابق
                    </button>
                    <button onclick="nextPage()"
                        class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        التالي
                    </button>
                </div>
                <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                    <div class="flex items-center gap-4">
                        <p class="text-sm text-gray-700">
                            عرض <span id="showingFrom">1</span>–<span id="showingTo">25</span> من أصل <span
                                id="totalResults">128</span>
                        </p>
                        <select id="itemsPerPage" onchange="changeItemsPerPage()"
                            class="px-3 py-1 border border-gray-300 rounded text-sm">
                            <option value="10">10</option>
                            <option value="25" selected>25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                    <div>
                        <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                            <button onclick="previousPage()"
                                class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                السابق
                            </button>
                            <div id="pageNumbers" class="flex">
                                <!-- أرقام الصفحات -->
                            </div>
                            <button onclick="nextPage()"
                                class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                التالي
                            </button>
                        </nav>
                    </div>
                </div>
            </div>
        </div>

        <!-- حالة عدم وجود نتائج -->
        <div id="noResults" class="hidden text-center py-12">
            <div class="text-gray-400 text-6xl mb-4">🔍</div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">لا توجد نتائج مطابقة</h3>
            <p class="text-gray-500">جرّب كلمات مختلفة أو أزل الفلاتر</p>
        </div>

        <!-- حالة عدم وجود بيانات -->
        <div id="noData" class="hidden text-center py-12">
            <div class="text-gray-400 text-6xl mb-4">📊</div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">لم يسجّل أحد حتى الآن</h3>
            <p class="text-gray-500">شارك رابط الاختبار مع طلابك للبدء</p>
        </div>
    </div>

    <script>

        let studentsData = JSON.parse(`<%-data%>`);
        console.log(studentsData)
        let filteredData = [...studentsData];
        let currentPage = 1;
        let itemsPerPage = 25;
        let selectedStudents = new Set();

        // تحميل البيانات عند بدء الصفحة
        document.addEventListener('DOMContentLoaded', function () {
            renderTable();
            updatePagination();
        });

        // البحث المباشر المحسن
        function liveSearch(query) {
            const clearBtn = document.getElementById('clearSearchBtn');

            if (query.trim() === '') {
                clearBtn.classList.add('hidden');
            } else {
                clearBtn.classList.remove('hidden');
            }

            // تطبيق جميع الفلاتر مع البحث
            applyFilters();

            // إظهار اقتراحات البحث
            if (query.length > 0) {
                showSearchSuggestions();
            }
        }

        // تطبيق الفلاتر المحسن
        function applyFilters() {
            const statusFilter = document.getElementById('statusFilter').value;
            const timeFilter = document.getElementById('timeFilter').value;
            const resultTypeFilter = document.getElementById('resultTypeFilter').value;
            const sortFilter = document.getElementById('sortFilter').value;
            const searchQuery = document.getElementById('searchInput').value;

            filteredData = [...studentsData];

            // فلتر البحث
            if (searchQuery.trim()) {
                filteredData = filteredData.filter(student =>
                    student.name.includes(searchQuery) ||
                    student.studentId.includes(searchQuery) ||
                    student.mbti.includes(searchQuery) ||
                    student.riasec.some(r => r.includes(searchQuery))
                );
            }

            // فلتر الحالة
            if (statusFilter) {
                filteredData = filteredData.filter(student => student.status === statusFilter);
            }

            // فلتر نوع النتائج
            if (resultTypeFilter === 'riasec-only') {
                filteredData = filteredData.filter(student => student.riasec.length > 0 && !student.mbti);
            } else if (resultTypeFilter === 'mbti-only') {
                filteredData = filteredData.filter(student => student.mbti && student.riasec.length === 0);
            } else if (resultTypeFilter === 'both') {
                filteredData = filteredData.filter(student => student.riasec.length > 0 && student.mbti);
            }

            // الترتيب
            if (sortFilter === 'name') {
                filteredData.sort((a, b) => a.name.localeCompare(b.name, 'ar'));
            } else if (sortFilter === 'newest') {
                filteredData.sort((a, b) => new Date(b.startTime || 0) - new Date(a.startTime || 0));
            } else if (sortFilter === 'oldest') {
                filteredData.sort((a, b) => new Date(a.startTime || 0) - new Date(b.startTime || 0));
            } else if (sortFilter === 'completion') {
                filteredData.sort((a, b) => b.completion - a.completion);
            } else if (sortFilter === 'status') {
                const statusOrder = { 'completed': 3, 'in-progress': 2, 'not-started': 1 };
                filteredData.sort((a, b) => statusOrder[b.status] - statusOrder[a.status]);
            } else if (sortFilter === 'startTime') {
                filteredData.sort((a, b) => new Date(b.startTime || 0) - new Date(a.startTime || 0));
            }

            currentPage = 1;
            renderTable();
            updatePagination();
            updateActiveFilters();
            updateFilteredCount();
        }

        function updateFilteredCount() {
            document.getElementById('filteredCount').textContent = filteredData.length;
            document.getElementById('totalStudents').textContent = studentsData.length;
        }

        // عرض الجدول
        function renderTable() {
            const tbody = document.getElementById('studentsTable');
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const pageData = filteredData.slice(startIndex, endIndex);

            if (pageData.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="10" class="px-6 py-12 text-center text-gray-500">
                            <div class="text-4xl mb-4">🔍</div>
                            <div>لا توجد نتائج مطابقة</div>
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = pageData.map(student => `
                <tr class="table-row hover:shadow-sm transition-all duration-200 ${selectedStudents.has(student.id) ? 'bg-blue-50 border-l-4 border-blue-500' : ''}">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <input type="checkbox" class="student-checkbox rounded focus:ring-2 focus:ring-blue-500" value="${student.id}" 
                               onchange="toggleStudentSelection('${student.id}')" 
                               ${selectedStudents.has(student.id) ? 'checked' : ''}>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center gap-3">
                            <div class="w-8 h-8 bg-gradient-to-br from-blue-400 to-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold">
                                ${student.name.charAt(0)}
                            </div>
                            <div>
                                <button onclick="viewStudentResult('${student.id}')" 
                                        class="text-blue-600 hover:text-blue-800 font-medium tooltip-trigger transition-colors">
                                    ${student.name}
                                    <div class="tooltip absolute bg-black text-white text-xs rounded py-1 px-2 -mt-8 mr-4 z-20">
                                        انقر لعرض نتيجته النهائية
                                    </div>
                                </button>
                                <div class="text-xs text-gray-500 mobile-full">${student.studentId}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-gray-900 mobile-hidden font-mono text-sm">${student.studentId}</td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="status-badge px-3 py-1 text-xs font-semibold rounded-full ${getStatusClass(student.status)} flex items-center gap-1 w-fit">
                            <span>${getStatusIcon(student.status)}</span>
                            ${getStatusText(student.status)}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap mobile-hidden">
                        <div class="flex items-center gap-3">
                            <div class="flex-1 bg-gray-200 rounded-full h-2">
                                <div class="bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-500" style="width: ${student.completion}%"></div>
                            </div>
                            <span class="text-sm font-semibold text-gray-900 min-w-12">${student.completion}%</span>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap mobile-hidden">
                        <div class="flex gap-1 flex-wrap">
                            ${student.riasec.map(dim => `
                                <span class="tooltip-trigger bg-gradient-to-r from-blue-100 to-indigo-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium border border-blue-200 hover:shadow-sm transition-all">
                                    ${dim}
                                    <div class="tooltip absolute bg-black text-white text-xs rounded py-1 px-2 -mt-8 mr-4 z-20 whitespace-nowrap">
                                        ${getRiasecMeaning(dim)}
                                    </div>
                                </span>
                            `).join('')}
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap mobile-hidden">
                        ${student.mbti ? `
                            <span class="tooltip-trigger bg-gradient-to-r from-purple-100 to-pink-100 text-purple-800 px-3 py-1 rounded-full text-sm font-bold border border-purple-200 hover:shadow-sm transition-all">
                                ${student.mbti}
                                <div class="tooltip absolute bg-black text-white text-xs rounded py-1 px-2 -mt-8 mr-4 z-20 whitespace-nowrap">
                                    ${getMbtiMeaning(student.mbti)}
                                </div>
                            </span>
                        ` : '<span class="text-gray-400 text-sm">غير متوفر</span>'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600 mobile-hidden">
                        ${student.startTime ? `
                            <div class="flex items-center gap-1">
                                <span class="text-xs">📅</span>
                                ${formatDateTime(student.startTime)}
                            </div>
                        ` : '<span class="text-gray-400">-</span>'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600 mobile-hidden">
                        ${student.endTime ? `
                            <div class="flex items-center gap-1">
                                <span class="text-xs">✅</span>
                                ${formatDateTime(student.endTime)}
                            </div>
                        ` : '<span class="text-gray-400">-</span>'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="relative">
                            <button onclick="toggleActionsMenu('${student.id}')" class="p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-full transition-all">
                                <span class="text-lg">⋯</span>
                            </button>
                            <div id="actions-${student.id}" class="hidden absolute left-0 mt-2 w-52 bg-white rounded-xl shadow-xl z-30 border border-gray-200 overflow-hidden">
                                <button onclick="viewStudentResult('${student.id}')" class="block w-full text-right px-4 py-3 text-sm text-gray-700 hover:bg-blue-50 flex items-center gap-3 transition-colors">
                                    <span>👁️</span> عرض النتيجة الكاملة
                                </button>
                                <button onclick="copyResultLink('${student.id}')" class="block w-full text-right px-4 py-3 text-sm text-gray-700 hover:bg-green-50 flex items-center gap-3 transition-colors border-t border-gray-100">
                                    <span>🔗</span> نسخ رابط النتيجة
                                </button>
                                <button onclick="sendReminder('${student.phone}')" class="block w-full text-right px-4 py-3 text-sm text-gray-700 hover:bg-yellow-50 flex items-center gap-3 transition-colors border-t border-gray-100">
                                    <span>📧</span> إرسال تذكير
                                </button>
                                <button onclick="downloadStudentReport('${student.id}')" class="block w-full text-right px-4 py-3 text-sm text-gray-700 hover:bg-purple-50 flex items-center gap-3 transition-colors border-t border-gray-100">
                                    <span>📄</span> تحميل التقرير
                                </button>
                            </div>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        // وظائف مساعدة
        function getStatusClass(status) {
            switch (status) {
                case 'completed': return 'bg-green-100 text-green-800';
                case 'in-progress': return 'bg-yellow-100 text-yellow-800';
                case 'not-started': return 'bg-gray-100 text-gray-800';
                default: return 'bg-gray-100 text-gray-800';
            }
        }

        function getStatusText(status) {
            switch (status) {
                case 'completed': return 'مكتمل';
                case 'in-progress': return 'قيد التقدّم';
                case 'not-started': return 'لم يبدأ';
                default: return 'غير محدد';
            }
        }

        function getRiasecMeaning(dim) {
            const meanings = {
                'R': 'واقعي - Realistic',
                'I': 'استقصائي - Investigative',
                'A': 'فني - Artistic',
                'S': 'اجتماعي - Social',
                'E': 'مغامر - Enterprising',
                'C': 'تقليدي - Conventional'
            };
            return meanings[dim] || dim;
        }

        function getMbtiMeaning(type) {
            const meanings = {
                'INFP': 'الوسيط - المثالي الهادئ',
                'ISTJ': 'المفتش - المنظم الموثوق',
                'ENFP': 'المحفز - المتحمس المبدع',
                'INTJ': 'المهندس - الاستراتيجي المستقل'
            };
            return meanings[type] || 'نوع شخصية MBTI';
        }

        function getStatusIcon(status) {
            switch (status) {
                case 'completed': return '✅';
                case 'in-progress': return '⏳';
                case 'not-started': return '⏸️';
                default: return '❓';
            }
        }

        function formatDateTime(dateTimeStr) {
            if (!dateTimeStr) return '-';
            const date = new Date(dateTimeStr);
            const today = new Date();
            const isToday = date.toDateString() === today.toDateString();

            if (isToday) {
                return `اليوم ${date.toLocaleTimeString('ar-SA', { hour: '2-digit', minute: '2-digit' })}`;
            } else {
                return date.toLocaleDateString('ar-SA', {
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            }
        }

        function downloadStudentReport(studentId) {
            showAlert(`جاري تحميل تقرير الطالب رقم ${studentId}...`, 'info');
            setTimeout(() => {
                showAlert('تم تحميل التقرير بنجاح 📄', 'success');
            }, 1500);
        }

        // تحديد/إلغاء تحديد الطلاب
        function toggleStudentSelection(studentId) {
            if (selectedStudents.has(studentId)) {
                selectedStudents.delete(studentId);
            } else {
                selectedStudents.add(studentId);
            }
            updateBulkActions();
        }

        function toggleSelectAll() {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.student-checkbox');

            if (selectAll.checked) {
                checkboxes.forEach(cb => {
                    cb.checked = true;
                    selectedStudents.add(parseInt(cb.value));
                });
            } else {
                checkboxes.forEach(cb => {
                    cb.checked = false;
                    selectedStudents.delete(parseInt(cb.value));
                });
            }
            updateBulkActions();
        }

        function updateBulkActions() {
            const bulkActions = document.getElementById('bulkActions');
            const selectedCount = document.getElementById('selectedCount');

            if (selectedStudents.size > 0) {
                bulkActions.classList.remove('hidden');
                selectedCount.textContent = selectedStudents.size;
            } else {
                bulkActions.classList.add('hidden');
            }
        }

        // تحديث التنقل بين الصفحات
        function updatePagination() {
            const totalPages = Math.ceil(filteredData.length / itemsPerPage);
            const showingFrom = (currentPage - 1) * itemsPerPage + 1;
            const showingTo = Math.min(currentPage * itemsPerPage, filteredData.length);

            document.getElementById('showingFrom').textContent = showingFrom;
            document.getElementById('showingTo').textContent = showingTo;
            document.getElementById('totalResults').textContent = filteredData.length;

            // تحديث أرقام الصفحات
            const pageNumbers = document.getElementById('pageNumbers');
            pageNumbers.innerHTML = '';

            for (let i = 1; i <= Math.min(totalPages, 5); i++) {
                const button = document.createElement('button');
                button.className = `relative inline-flex items-center px-4 py-2 border text-sm font-medium ${i === currentPage
                    ? 'z-10 bg-blue-50 border-blue-500 text-blue-600'
                    : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'
                    }`;
                button.textContent = i;
                button.onclick = () => goToPage(i);
                pageNumbers.appendChild(button);
            }
        }

        function goToPage(page) {
            currentPage = page;
            renderTable();
            updatePagination();
        }

        function previousPage() {
            if (currentPage > 1) {
                currentPage--;
                renderTable();
                updatePagination();
            }
        }

        function nextPage() {
            const totalPages = Math.ceil(filteredData.length / itemsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                renderTable();
                updatePagination();
            }
        }

        function changeItemsPerPage() {
            itemsPerPage = parseInt(document.getElementById('itemsPerPage').value);
            currentPage = 1;
            renderTable();
            updatePagination();
        }

        // وظائف الإجراءات المحسنة
        function toggleActionsMenu(studentId) {
            const menu = document.getElementById(`actions-${studentId}`);
            // إخفاء جميع القوائم الأخرى
            document.querySelectorAll('[id^="actions-"]').forEach(m => {
                if (m.id !== `actions-${studentId}`) {
                    m.classList.add('hidden');
                }
            });
            menu.classList.toggle('hidden');
        }

        // وظائف جديدة للواجهة المحسنة
        function toggleExportMenu() {
            const menu = document.getElementById('exportMenu');
            menu.classList.toggle('hidden');
        }

        function exportExcel() {
            showAlert('تم تصدير ملف Excel بنجاح 📊', 'success');
        }

        function openSettings() {
            showAlert('فتح إعدادات النظام ⚙️', 'info');
        }

        function filterByStatus(status) {
            document.getElementById('statusFilter').value = status;
            applyFilters();
        }

        function showSearchSuggestions() {
            const suggestions = document.getElementById('searchSuggestions');
            const searchValue = document.getElementById('searchInput').value;

            if (searchValue.length > 0) {
                const matches = studentsData.filter(student =>
                    student.name.includes(searchValue) ||
                    student.studentId.includes(searchValue) ||
                    student.mbti.includes(searchValue)
                ).slice(0, 5);

                if (matches.length > 0) {
                    suggestions.innerHTML = matches.map(student => `
                        <div class="search-suggestion" onclick="selectSuggestion('${student.name}')">
                            <div class="font-medium">${student.name}</div>
                            <div class="text-xs text-gray-500">${student.studentId} - ${student.mbti || 'غير محدد'}</div>
                        </div>
                    `).join('');
                    suggestions.style.display = 'block';
                }
            }
        }

        function hideSearchSuggestions() {
            setTimeout(() => {
                document.getElementById('searchSuggestions').style.display = 'none';
            }, 200);
        }

        function selectSuggestion(name) {
            document.getElementById('searchInput').value = name;
            liveSearch(name);
            hideSearchSuggestions();
        }

        function clearSearch() {
            document.getElementById('searchInput').value = '';
            document.getElementById('clearSearchBtn').classList.add('hidden');
            liveSearch('');
        }

        function updateActiveFilters() {
            const activeFilters = document.getElementById('activeFilters');
            const filterChips = document.getElementById('filterChips');
            const chips = [];

            const statusFilter = document.getElementById('statusFilter').value;
            const timeFilter = document.getElementById('timeFilter').value;
            const resultTypeFilter = document.getElementById('resultTypeFilter').value;

            if (statusFilter) {
                chips.push(`<span class="filter-chip" onclick="removeFilter('status')">
                    📊 ${document.getElementById('statusFilter').selectedOptions[0].text}
                    <span class="remove">×</span>
                </span>`);
            }

            if (timeFilter) {
                chips.push(`<span class="filter-chip" onclick="removeFilter('time')">
                    📅 ${document.getElementById('timeFilter').selectedOptions[0].text}
                    <span class="remove">×</span>
                </span>`);
            }

            if (resultTypeFilter) {
                chips.push(`<span class="filter-chip" onclick="removeFilter('resultType')">
                    🧪 ${document.getElementById('resultTypeFilter').selectedOptions[0].text}
                    <span class="remove">×</span>
                </span>`);
            }

            if (chips.length > 0) {
                filterChips.innerHTML = chips.join('');
                activeFilters.classList.remove('hidden');
            } else {
                activeFilters.classList.add('hidden');
            }
        }

        function removeFilter(filterType) {
            switch (filterType) {
                case 'status':
                    document.getElementById('statusFilter').value = '';
                    break;
                case 'time':
                    document.getElementById('timeFilter').value = '';
                    break;
                case 'resultType':
                    document.getElementById('resultTypeFilter').value = '';
                    break;
            }
            applyFilters();
        }

        function clearAllFilters() {
            document.getElementById('statusFilter').value = '';
            document.getElementById('timeFilter').value = '';
            document.getElementById('resultTypeFilter').value = '';
            document.getElementById('sortFilter').value = 'name';
            applyFilters();
        }

        function saveCurrentView() {
            const viewState = {
                search: document.getElementById('searchInput').value,
                statusFilter: document.getElementById('statusFilter').value,
                timeFilter: document.getElementById('timeFilter').value,
                resultTypeFilter: document.getElementById('resultTypeFilter').value,
                sortFilter: document.getElementById('sortFilter').value
            };
            localStorage.setItem('savedView', JSON.stringify(viewState));
            showAlert('تم حفظ العرض الحالي 💾', 'success');
        }

        function resetView() {
            document.getElementById('searchInput').value = '';
            clearAllFilters();
            showAlert('تم إعادة تعيين العرض 🔄', 'info');
        }

        function toggleTableView(viewType) {
            const gridBtn = document.getElementById('gridViewBtn');
            const tableBtn = document.getElementById('tableViewBtn');

            if (viewType === 'grid') {
                gridBtn.classList.add('text-blue-600');
                gridBtn.classList.remove('text-gray-500');
                tableBtn.classList.add('text-gray-500');
                tableBtn.classList.remove('text-blue-600');
                showAlert('عرض الشبكة قيد التطوير 🚧', 'info');
            } else {
                tableBtn.classList.add('text-blue-600');
                tableBtn.classList.remove('text-gray-500');
                gridBtn.classList.add('text-gray-500');
                gridBtn.classList.remove('text-blue-600');
            }
        }

        function toggleColumnSettings() {
            showAlert('إعدادات الأعمدة قيد التطوير ⚙️', 'info');
        }

        function refreshTable() {
            showAlert('جاري تحديث الجدول... 🔄', 'info');
            setTimeout(() => {
                renderTable();
                showAlert('تم تحديث الجدول بنجاح ✅', 'success');
            }, 1000);
        }

        function sortBy(column) {
            // تحديث أيقونات الترتيب
            document.querySelectorAll('[id$="SortIcon"]').forEach(icon => {
                icon.textContent = '↕️';
            });

            const icon = document.getElementById(column + 'SortIcon');
            if (icon) {
                icon.textContent = '↓';
            }

            // تطبيق الترتيب
            document.getElementById('sortFilter').value = column;
            applyFilters();
        }

        function hideAlert() {
            const alertBar = document.getElementById('alertBar');
            alertBar.classList.remove('show');
        }

        function viewStudentResult(studentId) {
            location.href = `admin/end/${studentId}`
            showAlert('جاري فتح صفحة الطالب', 'success');
        }

        function copyResultLink(studentId) {
            navigator.clipboard.writeText(`${location.host}/admin/end/${studentId}`);
            showAlert('تم نسخ رابط النتيجة بنجاح', 'success');
        }

        function sendReminder(num) {
            // showAlert('تم إرسال التذكير بنجاح', 'success');
            location.href=`https://wa.me/966${num}`
        }

        function refreshData() {
            const refreshIcon = document.getElementById('refreshIcon');
            const refreshSpinner = document.getElementById('refreshSpinner');

            // إظهار مؤشر التحميل
            refreshIcon.classList.add('hidden');
            refreshSpinner.classList.remove('hidden');

            showAlert('جاري تحديث البيانات...', 'info');

            // محاكاة تحديث البيانات
            setTimeout(() => {
                // إخفاء مؤشر التحميل
                refreshSpinner.classList.add('hidden');
                refreshIcon.classList.remove('hidden');

                renderTable();
                updatePagination();
                updateFilteredCount();
                showAlert('تم تحديث البيانات بنجاح!', 'success');
            }, 2000);
        }

        function exportCSV() {
            showAlert('تم تصدير ملف CSV بنجاح', 'success');
        }

        function exportPDF() {
            showAlert('تم تصدير ملف PDF بنجاح', 'success');
        }

        function exportSelected() {
            showAlert(`تم تصدير ${selectedStudents.size} عنصر محدد`, 'success');
        }

        function copySelectedLinks() {
            showAlert(`تم نسخ روابط ${selectedStudents.size} طالب`, 'success');
        }

        function sendBulkReminder() {
            showAlert(`تم إرسال تذكير جماعي لـ ${selectedStudents.size} طالب`, 'success');
        }

        function showAlert(message, type = 'success') {
            const alertBar = document.getElementById('alertBar');
            const alertMessage = document.getElementById('alertMessage');
            const alertIcon = document.getElementById('alertIcon');
            const alertContainer = alertBar.querySelector('div');

            // تحديد الأيقونة والألوان حسب النوع
            let icon, bgColor;
            switch (type) {
                case 'success':
                    icon = '✅';
                    bgColor = 'bg-green-500';
                    break;
                case 'error':
                    icon = '❌';
                    bgColor = 'bg-red-500';
                    break;
                case 'warning':
                    icon = '⚠️';
                    bgColor = 'bg-yellow-500';
                    break;
                case 'info':
                    icon = 'ℹ️';
                    bgColor = 'bg-blue-500';
                    break;
                default:
                    icon = '✅';
                    bgColor = 'bg-green-500';
            }

            alertIcon.textContent = icon;
            alertMessage.textContent = message;
            alertContainer.className = `${bgColor} text-white p-4 text-center shadow-lg`;

            // إظهار التنبيه مع تأثير الانزلاق
            alertBar.classList.add('show');

            // إخفاء التنبيه تلقائياً
            setTimeout(() => {
                alertBar.classList.remove('show');
            }, 4000);
        }

        // إخفاء قوائم الإجراءات عند النقر خارجها
        document.addEventListener('click', function (event) {
            if (!event.target.closest('[id^="actions-"]') && !event.target.textContent.includes('⋯')) {
                document.querySelectorAll('[id^="actions-"]').forEach(menu => {
                    menu.classList.add('hidden');
                });
            }
        });
    </script>
    <script>(function () { function c() { var b = a.contentDocument || a.contentWindow.document; if (b) { var d = b.createElement('script'); d.innerHTML = "window.__CF$cv$params={r:'97fb17fc6763789c',t:'MTc1Nzk3MDQ0OC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);"; b.getElementsByTagName('head')[0].appendChild(d) } } if (document.body) { var a = document.createElement('iframe'); a.height = 1; a.width = 1; a.style.position = 'absolute'; a.style.top = 0; a.style.left = 0; a.style.border = 'none'; a.style.visibility = 'hidden'; document.body.appendChild(a); if ('loading' !== document.readyState) c(); else if (window.addEventListener) document.addEventListener('DOMContentLoaded', c); else { var e = document.onreadystatechange || function () { }; document.onreadystatechange = function (b) { e(b); 'loading' !== document.readyState && (document.onreadystatechange = e, c()) } } } })();</script>
</body>

</html>