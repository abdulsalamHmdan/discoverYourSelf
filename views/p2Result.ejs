<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>اختبار الشخصية المتقدم - خمسة مسارات مختلفة</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Tajawal', Arial, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            position: relative;
            overflow: hidden;
        }

        .gradient-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.05)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.08)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            opacity: 0.3;
        }

        .card-shadow {
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.05);
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95);
        }

        .fade-in {
            animation: fadeIn 0.6s ease-out;
        }

        .fade-out {
            animation: fadeOut 0.4s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(30px) scale(0.95);
            }

            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        @keyframes fadeOut {
            from {
                opacity: 1;
                transform: translateY(0) scale(1);
            }

            to {
                opacity: 0;
                transform: translateY(-20px) scale(0.98);
            }
        }

        .selected-option {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8) !important;
            border: 3px solid #1e40af !important;
            color: white !important;
            font-weight: bold !important;
            transform: scale(1.02) !important;
            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4) !important;
            position: relative;
        }

        .selected-option::before {
            content: '✓';
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            font-weight: bold;
        }

        .timer-display {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
            font-size: 14px;
        }

        .test-takers-counter {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            padding: 12px 20px;
            border-radius: 15px;
            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.3);
            display: inline-flex;
            align-items: center;
            gap: 10px;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .checkbox-selected {
            background: linear-gradient(135deg, #10b981, #059669) !important;
            border: 3px solid #047857 !important;
            color: white !important;
        }

        .ranking-item.selected {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8) !important;
            color: white !important;
            border: 3px solid #1e40af !important;
        }

        .scale-selected {
            background: linear-gradient(135deg, #10b981, #059669) !important;
            border: 3px solid #047857 !important;
            color: white !important;
            transform: scale(1.1) !important;
        }

        @media print {
            .noP {
                display: none;
            }


        }
    </style>
</head>

<body class="min-h-screen">
    <!-- Header -->
    <header class="gradient-bg text-white py-6">
        <div class="container mx-auto px-4">
            <h1 class="text-4xl font-bold text-center mb-2">📄 تقرير أنماط الشخصية – مقياس MBTI</h1>
            <p class="text-center opacity-200">ضمن مقاييس منصة بصيرة لاكتشاف الذات</p>

        </div>
    </header>

    <!-- Progress Bar -->
    <div id="progressContainer" class="bg-white shadow-sm py-4 hidden">
        <div class="container mx-auto px-4">
            <div class="flex justify-between items-center mb-2">
                <span id="progressText" class="text-sm font-medium text-gray-600">السؤال 1 من 24</span>
            </div>

            <!-- Current Path Progress -->
            <div class="w-full bg-gray-200 rounded-full h-2 mb-3">
                <div id="progressBar" class="bg-blue-600 h-2 rounded-full transition-all duration-300"
                    style="width: 4%"></div>
            </div>

            <!-- Overall Paths Progress -->
            <div id="pathsProgress" class="mb-2">
                <div class="flex justify-between items-center mb-2">
                    <span class="text-xs font-medium text-gray-500">تقدم المسارات الإجمالي</span>
                    <span id="currentPathName" class="text-xs font-medium text-blue-600">المسار الشامل</span>
                </div>
                <div class="flex space-x-1 space-x-reverse">
                    <div id="pathIndicator1" class="flex-1 h-1 bg-gray-200 rounded-full">
                        <div class="h-1 bg-blue-600 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                    <div id="pathIndicator2" class="flex-1 h-1 bg-gray-200 rounded-full">
                        <div class="h-1 bg-green-600 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                    <div id="pathIndicator3" class="flex-1 h-1 bg-gray-200 rounded-full">
                        <div class="h-1 bg-purple-600 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                    <div id="pathIndicator4" class="flex-1 h-1 bg-gray-200 rounded-full">
                        <div class="h-1 bg-pink-600 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                    <div id="pathIndicator5" class="flex-1 h-1 bg-gray-200 rounded-full">
                        <div class="h-1 bg-orange-600 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                </div>
                <div class="flex justify-between text-xs text-gray-400 mt-1">
                    <span>شامل</span>
                    <span>سريع</span>
                    <span>عمل</span>
                    <span>علاقات</span>
                    <span>تأكيد</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <!-- Results Screen -->
            <div class="max-w-4xl mx-auto">
                <div class="bg-blue-50 card-shadow p-6">
                    <div class="text-center mb-8">
                        </div>
                       <div class="bg-gradient-to-r from-slate-500 to-slate-500 rounded-3xl shadow-2xl p-8 mb-8 text-white text-center">
                        <h1 class="text-4xl font-bold mb-4">
    <div class="text-3xl mb-4">
      👋 مرحبًا  
      <span id="result-name" class="text-yellow-300"><%= name %></span>
      
    </div>
  </h1>

  <div class="bg-gradient-to-br from-slate-800/90 via-slate-600 to-gray-700 backdrop-blur-xl border border-indigo-400/20 rounded-3xl shadow-2xl p-12 text-white leading-relaxed mt-12">
  <h2 class="text-4xl font-bold mb-10 text-center text-indigo-300 drop-shadow">
    <h3 class="text-3xl font-bold text-white mb-6 text-center">🌟 مرحبًا بك في تقريرك الخاص لمقياس أنماط الشخصية (MBTI)</h3>

    <p class="text-xl mb-6 opacity-90">
      يسعدنا أن نقدّم لك تقريرك الخاص بمقياس 
      <span class="text-indigo-300 font-semibold">أنماط الشخصية (MBTI)</span> ضمن مقاييس منصة 
      <span class="text-indigo-300 font-semibold">بصيرة</span> لاكتشاف الذات.
      يهدف هذا التقرير إلى مساعدتك على فهم شخصيتك بعمق والتعرّف على الطريقة التي 
      <span class="text-indigo-200 font-semibold">تفكّر، وتتفاعل، وتتّخذ بها قراراتك</span>،
      مما يتيح لك بناء مسار دراسي ومهني يتناسب مع أسلوبك الطبيعي في الحياة والعمل.
    </p>

    <p class="text-xl mb-6 opacity-90">
      يعتمد هذا المقياس على <span class="font-semibold text-indigo-300">نظرية كارل غوستاف يونغ (Carl G. Jung)</span> 
      التي طوّرها فيما بعد 
      <span class="italic text-indigo-200">إيزابيل مايرز وكاثرين بريغز (Isabel Myers & Katharine Briggs)</span>،
      وتقوم فكرته على أن الناس يختلفون في الطريقة التي 
      <span class="text-indigo-300 font-semibold">يدركون بها العالم ويتعاملون معه.</span>
    </p>

    <p class="text-xl mb-6 opacity-90">
      يقيس المقياس أربع ثنائيات رئيسية تحدد نمط الشخصية المكوَّن من أربعة حروف:
    </p>

    <ul class="text-right text-xl opacity-90 space-y-4 max-w-3xl mx-auto list-disc list-inside">
      <li><span class="text-indigo-300 font-semibold">الانبساط (E)</span> ↔ <span class="text-indigo-300 font-semibold">الانطواء (I)</span> — كيف تفضّل التفاعل مع العالم والناس.</li>
      <li><span class="text-indigo-300 font-semibold">الحدس (N)</span> ↔ <span class="text-indigo-300 font-semibold">الاستشعار (S)</span> — كيف تفضل جمع المعلومات وفهم الواقع.</li>
      <li><span class="text-indigo-300 font-semibold">التفكير (T)</span> ↔ <span class="text-indigo-300 font-semibold">المشاعر (F)</span> — كيف تتخذ قراراتك وتتعامل مع القيم.</li>
      <li><span class="text-indigo-300 font-semibold">الحكم (J)</span> ↔ <span class="text-indigo-300 font-semibold">الإدراك (P)</span> — كيف تنظّم حياتك وتتفاعل مع المواقف.</li>
    </ul>

    <p class="text-xl mt-8 opacity-90">
      ومن خلال جمع نتائجك في هذه الأبعاد، يحدّد المقياس 
      <span class="font-semibold text-indigo-300">نمط شخصيتك المميز</span> 
      (مثل: INFJ، ESTP، ENFP...)
      ويقدّم لك تحليلًا شاملاً لأسلوبك الشخصي في التفكير والتواصل والعمل،
      إضافةً إلى <span class="font-semibold text-indigo-300">توصيات مهنية وأكاديمية</span> 
      تساعدك على تحقيق التوازن بين شخصيتك، أهدافك، وبيئتك الدراسية أو العملية.
    </p>
  </div>
  <div class="bg-gradient-to-br from-slate-800/90 via-slate-600 to-gray-700 backdrop-blur-xl border border-indigo-400/20 rounded-3xl shadow-2xl p-12 text-white leading-relaxed mt-12">
  <h2 class="text-4xl font-bold mb-10 text-center text-indigo-300 drop-shadow">
    💡 نصائح قبل قراءة التقرير
  </h2>

  <ul class="list-disc list-inside text-right text-xl opacity-95 space-y-4 mx-auto max-w-4xl">
    <li>تذكّر أن نتائج هذا التقرير تمثّل انعكاسًا لميولك الحالية، وليست حكمًا ثابتًا على شخصيتك أو قدراتك.</li>
    <li>يساعدك التقرير على فهم ذاتك وتوسيع وعيك المهني، وليس على حصر اختياراتك.</li>
    <li>اقرأ النتائج بعقل منفتح واعتبرها فرصة لاكتشاف زوايا جديدة في شخصيتك.</li>
    <li>ركّز على الميول الأعلى دون إهمال الميول المتوسطة أو الثانوية، فقد تكون داعمة لمسارك المهني.</li>
    <li>تذكّر أن الاهتمامات تتغيّر بمرور الوقت، لذلك يُفضّل إعادة القياس بعد مرحلة دراسية أو عملية جديدة.</li>
    <li>ناقش نتائجك مع مستشارك المهني أو الأكاديمي لتحديد المسار الأنسب لك.</li>
    <li>استخدم ما ستقرأه لتخطّط لمسار يجمع بين الشغف، المهارة، والفرصة.</li>
  </ul>

  <p class="font-semibold text-indigo-300 text-2xl mt-10 text-center">
    🎯 هدف هذا التقرير هو أن تعرف نفسك لتختار بوعي، لا أن تُقيّد نفسك بنتيجة واحدة.
  </p>
</div>

<!-- المسافة الفاصلة قبل الأقسام التالية -->
<div class="mt-16 grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">

</div>
                    <div id="personalityResult" class="mb-8">
                        <div
                            class="bg-gradient-to-r from-blue-300 to-purple-222 text-white p-8 rounded-lg text-center mb-6">
                            <div id="" class="text-5xl font-bold mb-3">نمطك الشخصي</div>
                            <div id="personalityType" class="text-5xl font-bold mb-3">ENFP</div>
                            <div id="personalityName" class="text-2xl mb-4">المُلهِم المبدع</div>
                            <div class="bg-white bg-opacity-20 rounded-full px-6 py-2 inline-block">
                                <span class="text-lg font-medium">مستوى الثقة: <span
                                        id="confidenceLevel">92</span>%</span>
                            </div>
                        </div>

                        
                        <!-- أداء المسارات -->
                        <div class="bg-white p-4 rounded-lg border border-gray-200 mb-6">
                            <h4 class="font-semibold text-gray-800 mb-4 text-lg text-center">🛤️ أداء المسارات</h4>
                            <div id="pathPerformance" class="grid grid-cols-5 gap-2"></div>
                        </div>

                        <div class="grid md:grid-cols-2 gap-6 mb-6">
                            <div class="bg-green-50 p-6 rounded-lg">
                                <h4 class="font-semibold text-green-800 mb-3 text-lg">✨ نقاط القوة</h4>
                                <ul id="strengths" class="text-green-700 space-y-2"></ul>
                            </div>
                            <div class="bg-orange-50 p-6 rounded-lg">
                                <h4 class="font-semibold text-orange-800 mb-3 text-lg">🎯 مجالات التطوير</h4>
                                <ul id="improvements" class="text-orange-700 space-y-2"></ul>
                            </div>
                        </div>

                        <div class="bg-gray-50 p-6 rounded-lg mb-6">
                            <h4 class="font-semibold text-gray-800 mb-4 text-lg">📊 تحليل المحاور الأربعة</h4>
                            <div id="dimensionsAnalysis" class="space-y-4"></div>
                        </div>

                        <!-- الرسم البياني الهرمي الرئيسي -->
                        <div class="mb-6">
                            <div id="scoresChart" class="space-y-3"></div>
                        </div>

                        <!-- مستوى وضوح الأبعاد تحت الرسم مباشرة -->
                        <div class="mb-6">
                            <div id="clarityChart" class="space-y-3"></div>
                        </div>

                        <!-- شرح مفصل لنمط الشخصية -->
                        <div
                            class="bg-gradient-to-r from-indigo-50 to-purple-50 border border-indigo-200 rounded-xl p-8 mb-8">
                            <div class="flex items-center mb-6">
                                <div class="w-12 h-12 bg-indigo-600 rounded-full flex items-center justify-center ml-4">
                                    <span class="text-white font-bold text-xl">🧠</span>
                                </div>
                                <h3 class="text-2xl font-bold text-indigo-800">شرح نمط شخصيتك بالتفصيل</h3>
                            </div>

                            <div id="personalityExplanation" class="space-y-6">
                                <!-- سيتم ملؤها بواسطة JavaScript -->
                            </div>
                        </div>

                        <div class="grid md:grid-cols-3 gap-6">
                            <div class="bg-blue-50 p-6 rounded-lg">
                                <h4 class="font-semibold text-blue-800 mb-3">💼 في العمل</h4>
                                <p id="workAdvice" class="text-blue-700 text-sm"></p>
                            </div>
                            <div class="bg-purple-50 p-6 rounded-lg">
                                <h4 class="font-semibold text-purple-800 mb-3">📚 في الدراسة</h4>
                                <p id="studyAdvice" class="text-purple-700 text-sm"></p>
                            </div>
                            <div class="bg-pink-50 p-6 rounded-lg">
                                <h4 class="font-semibold text-pink-800 mb-3">❤️ في العلاقات</h4>
                                <p id="relationshipAdvice" class="text-pink-700 text-sm"></p>
                            </div>
                        </div>
                    </div>


                    <!-- Timing Statistics -->
                    <div class="mb-6">
                        <div id="timingStats">
                            <!-- Will be populated by JavaScript -->
                        </div>
                      <div class="bg-gradient-to-br from-slate-800/90 via-slate-600 to-gray-800 backdrop-blur-xl border border-indigo-400/20 rounded-3xl shadow-2xl p-12 text-white leading-relaxed mt-12">
  <h2 class="text-4xl font-bold mb-10 text-center text-indigo-300 drop-shadow">
    🧭 نصائح عملية بعد قراءة التقرير
  </h2>

  <p class="text-1xl text-center mb-10 opacity-95 max-w-2xl mx-auto">
    بعد انتهائك من قراءة هذا التقرير وفهم نتائجك، اجعل الخطوة التالية تطبيقية وواعية.  
    فالقيمة الحقيقية للمقياس تكمن في <span class="text-indigo-300 font-semibold">تحويل المعرفة إلى فعلٍ ملموس</span> يقودك نحو تطوير ذاتك ومسارك المهني.
  </p>

  <div class="text-right text-2xl opacity-100 space-y-6 mx-auto max-w-5xl">
    <p>✍️ <span class="font-semibold text-indigo-300">اكتب خلاصة ما تعلّمته عن نفسك</span> في نقاط محددة — ما الذي جذبك؟ وما الذي فاجأك؟</p>

    <p>🎯 <span class="font-semibold text-indigo-300">اختر مسارين محتملين</span> من التخصصات أو المهن المقترحة، وابدأ بالبحث الجاد عنها (المتطلبات، بيئة العمل، فرص التطور).</p>

    <p>🗣️ <span class="font-semibold text-indigo-300">ناقش نتائجك</span> مع شخص مختص أو موجّه مهني ليساعدك على فهم النتائج وربطها بقدراتك الواقعية.</p>

    <p>🧩 <span class="font-semibold text-indigo-300">جرّب الأنشطة المرتبطة بميولك</span> (تطوع، تدريب، مشروع صغير) لتتأكد أنك تستمتع فعلاً بهذا المجال.</p>

    <p>📅 <span class="font-semibold text-indigo-300">ضع خطة قصيرة المدى (30 يومًا)</span> لتطوير مهارة أو معرفة في مجال ميولك الأعلى.</p>

    <p>🕊️ <span class="font-semibold text-indigo-300">تذكّر أن المقياس دليل لا قرار</span> — استخدمه كخريطة ترشدك، لا كقيد يحدّك.</p>

    <p>💡 <span class="font-semibold text-indigo-300">أعد القياس مستقبلاً</span> بعد مرحلة دراسية أو مهنية جديدة لتتابع تطور ميولك واتجاهاتك.</p>
  </div>

  <hr class="border-t border-indigo-500/30 my-12 w-3/4 mx-auto">

  <p class="text-3xl text-center text-indigo-300 font-semibold">
    🎓 هدف <span class="text-white font-bold">«بصيرة»</span> أن تبني مستقبلك بخطوات واعية  
    تجمع بين <span class="text-indigo-200 font-semibold">شغفك، قدراتك، وفرصك الحقيقية</span>.
  </p>
</div>

    </div>
                    </div>
                    <% if(from=="show" ) { %>
                        <div class="text-center space-x-4 space-x-reverse noP">
                            <button onclick="downloadPDF()"
                                class="bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-300 transform hover:scale-105">
                                📄 حفظ كـ PDF
                            </button>
                            <button onclick="(()=>{history.back()})()"
                                class="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-3 rounded-lg transition-colors">
                                <span>↪️</span>
                                <span>عودة</span>
                            </button>

                        </div>
                        <% } %>

                </div>
                
            </div>
        </div>
    </main>
    

    <script>
        // Test state
        let testState = <%-p2 %>;
        let currentQuestion = testState.currentQuestion;
        let answers = testState.answers;
        let scores = testState.scores;
        let userName = testState.userName;
        let currentPath = testState.currentPath;
        let completedPaths = testState.completedPaths;
        let allPathAnswers = testState.allPathAnswers;
        let currentQuestions = testState.currentQuestions;
        let questionStartTime = testState.questionStartTime;
        let timerInterval = testState.timerInterval;
        let totalStartTime = testState.totalStartTime;
        let questionTimes = testState.questionTimes;
        let fastestQuestion = testState.fastestQuestion;
        let slowestQuestion = testState.slowestQuestion;
        let warningShown = testState.warningShown;
        let currentRanking = testState.currentRanking;
        let selectedCheckboxes = testState.selectedCheckboxes;
        let quickAnswerCount = testState.quickAnswerCount;
        let randomAnswerPattern = testState.randomAnswerPattern;
        let contradictionFlags = testState.contradictionFlags;
        let lastAnswerTime = testState.lastAnswerTime;
        let consistencyScore = testState.consistencyScore;
        let focusBreaksShown = testState.focusBreaksShown;
        const endTime = testState.endTime

        // Path 1: Comprehensive (24 questions)
        const path1Questions = [
            // E vs I (6 questions)
            {
                question: "في المناسبات الاجتماعية، أشعر بالراحة أكثر عندما:",
                type: "binary",
                options: [
                    { text: "أتفاعل مع أشخاص كثيرين ومتنوعين", dimension: "E" },
                    { text: "أتحدث مع مجموعة صغيرة من الأصدقاء المقربين", dimension: "I" }
                ]
            },
            {
                question: "عندما أحتاج لاستعادة طاقتي بعد يوم طويل، أفضل:",
                type: "binary",
                options: [
                    { text: "الخروج والتفاعل مع الآخرين في أنشطة اجتماعية", dimension: "E" },
                    { text: "قضاء وقت هادئ بمفردي في المنزل", dimension: "I" }
                ]
            },
            {
                question: "في العمل الجماعي، أميل إلى:",
                type: "binary",
                options: [
                    { text: "التفكير بصوت عالٍ ومشاركة الأفكار فوراً", dimension: "E" },
                    { text: "التفكير بهدوء قبل مشاركة أفكاري", dimension: "I" }
                ]
            },
            {
                question: "أشعر بالحيوية أكثر عندما:",
                type: "binary",
                options: [
                    { text: "أكون محاطاً بالناس والأنشطة", dimension: "E" },
                    { text: "أكون في بيئة هادئة ومركزة", dimension: "I" }
                ]
            },
            {
                question: "عند مواجهة مشكلة، أفضل:",
                type: "binary",
                options: [
                    { text: "مناقشتها مع الآخرين للحصول على آرائهم", dimension: "E" },
                    { text: "التفكير فيها بمفردي أولاً", dimension: "I" }
                ]
            },
            {
                question: "في الاجتماعات، أميل إلى:",
                type: "binary",
                options: [
                    { text: "المشاركة والتعليق بشكل تلقائي", dimension: "E" },
                    { text: "الاستماع أكثر والتحدث عند الضرورة", dimension: "I" }
                ]
            },

            // S vs N (6 questions)
            {
                question: "عند تعلم شيء جديد، أفضل:",
                type: "binary",
                options: [
                    { text: "البدء بالتفاصيل والحقائق الملموسة", dimension: "S" },
                    { text: "فهم الصورة الكبيرة والمفاهيم العامة", dimension: "N" }
                ]
            },
            {
                question: "أثق أكثر في:",
                type: "binary",
                options: [
                    { text: "الخبرة العملية والتجارب المثبتة", dimension: "S" },
                    { text: "الحدس والإمكانيات المستقبلية", dimension: "N" }
                ]
            },
            {
                question: "عند حل المشاكل، أركز على:",
                type: "binary",
                options: [
                    { text: "الحلول العملية المجربة", dimension: "S" },
                    { text: "الحلول الإبداعية والمبتكرة", dimension: "N" }
                ]
            },
            {
                question: "أستمتع أكثر بالأعمال التي:",
                type: "binary",
                options: [
                    { text: "تتطلب دقة في التفاصيل والتنفيذ", dimension: "S" },
                    { text: "تتطلب رؤية وتخطيط للمستقبل", dimension: "N" }
                ]
            },
            {
                question: "عند قراءة التعليمات، أميل إلى:",
                type: "binary",
                options: [
                    { text: "اتباعها خطوة بخطوة بدقة", dimension: "S" },
                    { text: "فهم الهدف العام والارتجال", dimension: "N" }
                ]
            },
            {
                question: "أفضل المحادثات التي تدور حول:",
                type: "binary",
                options: [
                    { text: "الأحداث الحالية والتجارب الواقعية", dimension: "S" },
                    { text: "الأفكار والاحتمالات المستقبلية", dimension: "N" }
                ]
            },

            // T vs F (6 questions)
            {
                question: "عند اتخاذ قرار مهم، أعطي الأولوية لـ:",
                type: "binary",
                options: [
                    { text: "التحليل المنطقي والحقائق الموضوعية", dimension: "T" },
                    { text: "القيم الشخصية وتأثير القرار على الآخرين", dimension: "F" }
                ]
            },
            {
                question: "في النقاشات، أركز على:",
                type: "binary",
                options: [
                    { text: "الحجج المنطقية والأدلة", dimension: "T" },
                    { text: "مشاعر الأشخاص ووجهات نظرهم", dimension: "F" }
                ]
            },
            {
                question: "عند تقييم الأداء، أهتم أكثر بـ:",
                type: "binary",
                options: [
                    { text: "الكفاءة والنتائج المحققة", dimension: "T" },
                    { text: "الجهد المبذول والظروف الشخصية", dimension: "F" }
                ]
            },
            {
                question: "أشعر بالرضا أكثر عندما:",
                type: "binary",
                options: [
                    { text: "أحل مشكلة معقدة بطريقة منطقية", dimension: "T" },
                    { text: "أساعد شخصاً في تحسين حالته", dimension: "F" }
                ]
            },
            {
                question: "في بيئة العمل، أقدر:",
                type: "binary",
                options: [
                    { text: "العدالة والمعايير الموحدة", dimension: "T" },
                    { text: "التفهم والمرونة مع الظروف الفردية", dimension: "F" }
                ]
            },
            {
                question: "عند تقديم النقد، أميل إلى:",
                type: "binary",
                options: [
                    { text: "التركيز على الأخطاء والحلول المنطقية", dimension: "T" },
                    { text: "مراعاة مشاعر الشخص وتقديم الدعم", dimension: "F" }
                ]
            },

            // J vs P (6 questions)
            {
                question: "أفضل أن تكون خططي:",
                type: "binary",
                options: [
                    { text: "محددة ومنظمة مع جدول زمني واضح", dimension: "J" },
                    { text: "مرنة وقابلة للتعديل حسب الظروف", dimension: "P" }
                ]
            },
            {
                question: "في المشاريع، أفضل:",
                type: "binary",
                options: [
                    { text: "إنهاء المهام مبكراً وتجنب ضغط الوقت", dimension: "J" },
                    { text: "العمل تحت ضغط الوقت للحصول على أفضل النتائج", dimension: "P" }
                ]
            },
            {
                question: "عند التسوق، أميل إلى:",
                type: "binary",
                options: [
                    { text: "إعداد قائمة محددة والالتزام بها", dimension: "J" },
                    { text: "التجول واستكشاف الخيارات المتاحة", dimension: "P" }
                ]
            },
            {
                question: "أشعر بالراحة أكثر عندما:",
                type: "binary",
                options: [
                    { text: "تكون الأمور مقررة ومحسومة", dimension: "J" },
                    { text: "تبقى الخيارات مفتوحة للتغيير", dimension: "P" }
                ]
            },
            {
                question: "في إدارة الوقت، أفضل:",
                type: "binary",
                options: [
                    { text: "جدولة المهام والالتزام بالمواعيد", dimension: "J" },
                    { text: "المرونة والتكيف مع ما يحدث", dimension: "P" }
                ]
            },
            {
                question: "عند السفر، أفضل:",
                type: "binary",
                options: [
                    { text: "التخطيط المسبق وحجز كل شيء مقدماً", dimension: "J" },
                    { text: "الذهاب بروح المغامرة واتخاذ القرارات أثناء السفر", dimension: "P" }
                ]
            }
        ];

        // Path 2: Quick (10 questions) - مقياس من 1 إلى 5
        const path2Questions = [
            {
                question: "عند الشعور بالتعب والإرهاق، ما مدى تفضيلك للأنشطة الاجتماعية مقابل الوقت المنفرد؟",
                type: "scale",
                scaleType: "EI",
                leftLabel: "أفضل الهدوء والعزلة التامة (انطوائي)",
                rightLabel: "أفضل الأنشطة الاجتماعية والتفاعل (انبساطي)"
            },
            {
                question: "عند اتخاذ قرار مهم، ما مدى اعتمادك على الحقائق الملموسة مقابل الحدس والإمكانيات؟",
                type: "scale",
                scaleType: "SN",
                leftLabel: "أعتمد على الحقائق والتجارب (حسّي)",
                rightLabel: "أعتمد على الحدس والإمكانيات (حدسي)"
            },
            {
                question: "في المواقف الصعبة، ما مدى اعتمادك على التحليل المنطقي مقابل مراعاة المشاعر؟",
                type: "scale",
                scaleType: "TF",
                leftLabel: "أعتمد على المنطق والتحليل (تفكير)",
                rightLabel: "أراعي المشاعر والقيم (شعور)"
            },
            {
                question: "في تنظيم حياتك اليومية، ما مدى تفضيلك للتخطيط المسبق مقابل المرونة؟",
                type: "scale",
                scaleType: "JP",
                leftLabel: "أفضل التخطيط والجداول الثابتة (حكم)",
                rightLabel: "أفضل المرونة والتكيف (إدراك)"
            },
            {
                question: "في المناسبات الاجتماعية الكبيرة، ما مدى شعورك بالراحة والحيوية؟",
                type: "scale",
                scaleType: "EI",
                leftLabel: "أشعر بالتعب وأفضل المغادرة مبكراً (انطوائي)",
                rightLabel: "أشعر بالحيوية وأستمتع بالتفاعل (انبساطي)"
            },
            {
                question: "عند مواجهة مشكلة جديدة، ما مدى اعتمادك على الخبرة السابقة مقابل الحلول الإبداعية؟",
                type: "scale",
                scaleType: "SN",
                leftLabel: "أعتمد على الخبرة والطرق المجربة (حسّي)",
                rightLabel: "أبحث عن حلول إبداعية جديدة (حدسي)"
            },
            {
                question: "عند حل النزاعات، ما مدى تركيزك على العدالة مقابل الحفاظ على المشاعر؟",
                type: "scale",
                scaleType: "TF",
                leftLabel: "أركز على العدالة والحق (تفكير)",
                rightLabel: "أركز على المشاعر والانسجام (شعور)"
            },
            {
                question: "في إنجاز المشاريع، ما مدى تفضيلك للإنهاء المبكر مقابل العمل تحت الضغط؟",
                type: "scale",
                scaleType: "JP",
                leftLabel: "أفضل الإنهاء المبكر والتخطيط (حكم)",
                rightLabel: "أعمل بكفاءة أكبر تحت الضغط (إدراك)"
            },
            {
                question: "في المناقشات، ما مدى تفضيلك للتفكير الصامت مقابل التفكير بصوت عالٍ؟",
                type: "scale",
                scaleType: "EI",
                leftLabel: "أفكر بصمت ثم أتحدث (انطوائي)",
                rightLabel: "أفكر بصوت عالٍ أثناء الحديث (انبساطي)"
            },
            {
                question: "في التعلم والعمل، ما مدى تفضيلك للأساليب التقليدية مقابل الطرق المبتكرة؟",
                type: "scale",
                scaleType: "SN",
                leftLabel: "أفضل الأساليب المجربة والتقليدية (حسّي)",
                rightLabel: "أفضل الطرق المبتكرة والجديدة (حدسي)"
            }
        ];

        // Path 3: Work Focus (6 questions)
        const path3Questions = [
            {
                question: "في بيئة العمل، أحقق أفضل أداء عندما:",
                type: "binary",
                options: [
                    { text: "أعمل ضمن فريق متفاعل مع تبادل مستمر للأفكار", dimension: "E" },
                    { text: "أعمل بشكل مستقل مع تركيز عميق وهدوء", dimension: "I" }
                ]
            },
            {
                question: "عند مواجهة تحديات مهنية جديدة، أميل إلى:",
                type: "binary",
                options: [
                    { text: "الاعتماد على الخبرات المثبتة والإجراءات الموثوقة", dimension: "S" },
                    { text: "استكشاف حلول مبتكرة وطرق غير تقليدية", dimension: "N" }
                ]
            },
            {
                question: "عند تقييم الأداء في العمل، أعطي الأولوية لـ:",
                type: "binary",
                options: [
                    { text: "النتائج المحققة والمعايير الموضوعية للأداء", dimension: "T" },
                    { text: "الجهد المبذول والظروف الشخصية للموظف", dimension: "F" }
                ]
            },
            {
                question: "في التعامل مع المواعيد النهائية والمشاريع:",
                type: "binary",
                options: [
                    { text: "أضع خطة مفصلة وألتزم بها بدقة", dimension: "J" },
                    { text: "أحتفظ بمرونة للتكيف مع المتغيرات", dimension: "P" }
                ]
            },
            {
                question: "أقدر أكثر في القيادة المهنية:",
                type: "binary",
                options: [
                    { text: "التركيز على تحقيق الأهداف بكفاءة عالية", dimension: "T" },
                    { text: "الاهتمام بتنمية الفريق وبناء العلاقات", dimension: "F" }
                ]
            },
            {
                question: "في اجتماعات العمل، سلوكي المعتاد هو:",
                type: "binary",
                options: [
                    { text: "المبادرة بطرح الأفكار والمشاركة النشطة", dimension: "E" },
                    { text: "الاستماع بعناية والتفكير قبل المساهمة", dimension: "I" }
                ]
            }
        ];

        // Path 4: Relationships (6 questions)
        const path4Questions = [
            {
                question: "رتب هذه الأنشطة الاجتماعية حسب تفضيلك (من الأكثر إلى الأقل تفضيلاً):",
                type: "ranking",
                items: [
                    { text: "حفلة كبيرة مع أشخاص جدد", dimension: "E", points: 4 },
                    { text: "عشاء هادئ مع صديق مقرب", dimension: "I", points: 4 },
                    { text: "نشاط جماعي منظم", dimension: "E", points: 3 },
                    { text: "قضاء وقت منفرد في المنزل", dimension: "I", points: 3 }
                ]
            },
            {
                question: "اختر 3 خيارات أو أكثر التي تصف طريقتك في التواصل مع الآخرين:",
                type: "checkbox",
                minSelections: 3,
                options: [
                    { text: "أحب مشاركة التفاصيل اليومية", dimension: "S" },
                    { text: "أناقش الأفكار والمفاهيم المجردة", dimension: "N" },
                    { text: "أركز على الحقائق والأحداث", dimension: "S" },
                    { text: "أتحدث عن الأحلام والطموحات", dimension: "N" },
                    { text: "أفضل المحادثات العملية", dimension: "S" },
                    { text: "أستمتع بالنقاشات الفلسفية", dimension: "N" }
                ]
            },
            {
                question: "رتب هذه الطرق لحل الخلافات حسب ما تفضله:",
                type: "ranking",
                items: [
                    { text: "تحليل المشكلة منطقياً", dimension: "T", points: 4 },
                    { text: "التركيز على مشاعر الجميع", dimension: "F", points: 4 },
                    { text: "البحث عن حل عادل", dimension: "T", points: 3 },
                    { text: "الحفاظ على الانسجام", dimension: "F", points: 3 }
                ]
            },
            {
                question: "اختر 3 خيارات أو أكثر التي تصف تفضيلاتك في التخطيط الاجتماعي:",
                type: "checkbox",
                minSelections: 3,
                options: [
                    { text: "أخطط للأنشطة مسبقاً", dimension: "J" },
                    { text: "أفضل القرارات العفوية", dimension: "P" },
                    { text: "أحب الجداول المحددة", dimension: "J" },
                    { text: "أتكيف مع ما يحدث", dimension: "P" },
                    { text: "أحجز الأماكن مقدماً", dimension: "J" },
                    { text: "أقرر في اللحظة الأخيرة", dimension: "P" }
                ]
            },
            {
                question: "رتب هذه الصفات في الأصدقاء حسب أهميتها لك:",
                type: "ranking",
                items: [
                    { text: "يقدم نصائح منطقية", dimension: "T", points: 4 },
                    { text: "يتفهم مشاعري", dimension: "F", points: 4 },
                    { text: "صادق ومباشر", dimension: "T", points: 3 },
                    { text: "داعم ومتعاطف", dimension: "F", points: 3 }
                ]
            },
            {
                question: "اختر 3 خيارات أو أكثر التي تصف سلوكك في المناسبات الاجتماعية:",
                type: "checkbox",
                minSelections: 3,
                options: [
                    { text: "أتحدث مع أشخاص كثيرين", dimension: "E" },
                    { text: "أركز على محادثات عميقة", dimension: "I" },
                    { text: "أكون مركز الاهتمام", dimension: "E" },
                    { text: "أستمع أكثر مما أتحدث", dimension: "I" },
                    { text: "أنتقل بين المجموعات", dimension: "E" },
                    { text: "أبقى مع نفس الأشخاص", dimension: "I" }
                ]
            }
        ];

        // Path 5: Validation (4 questions)
        const path5Questions = [
            {
                question: "بشكل عام، أستمد طاقتي من:",
                type: "binary",
                options: [
                    { text: "التفاعل الاجتماعي والأنشطة الخارجية", dimension: "E" },
                    { text: "التأمل الداخلي والأنشطة الفردية", dimension: "I" }
                ]
            },
            {
                question: "عند مواجهة موقف جديد، أعتمد أكثر على:",
                type: "binary",
                options: [
                    { text: "الخبرة السابقة والحقائق الملموسة", dimension: "S" },
                    { text: "الحدس والإمكانيات المستقبلية", dimension: "N" }
                ]
            },
            {
                question: "في اتخاذ القرارات المهمة، الأولوية لدي:",
                type: "binary",
                options: [
                    { text: "التحليل المنطقي والموضوعية", dimension: "T" },
                    { text: "القيم الشخصية والتأثير على الآخرين", dimension: "F" }
                ]
            },
            {
                question: "أشعر بالراحة أكثر عندما تكون حياتي:",
                type: "binary",
                options: [
                    { text: "منظمة ومخططة مع أهداف واضحة", dimension: "J" },
                    { text: "مرنة ومفتوحة للفرص والتغييرات", dimension: "P" }
                ]
            }
        ];

        // Personality types database
        const personalityTypes = {
            "ENFP": {
                name: "المُلهِم المبدع",
                strengths: ["متحمس ومبدع", "ممتاز في التواصل", "مرن ومتكيف", "يلهم الآخرين", "متفائل وإيجابي"],
                improvements: ["قد يفتقر للتركيز", "يحتاج لتطوير المثابرة", "قد يتجنب التفاصيل الروتينية", "يحتاج لتحسين إدارة الوقت"],
                work: "يزدهر في البيئات الإبداعية والتعاونية، مثل التسويق والإعلام والاستشارات والتدريب",
                study: "يفضل التعلم التفاعلي والمشاريع الجماعية والمواضيع المتنوعة والنقاشات المفتوحة",
                relationships: "اجتماعي ومتفهم، يقدر العلاقات العميقة والنقاشات المعنوية ويحب مساعدة الآخرين"
            },
            "INTJ": {
                name: "المهندس المعماري",
                strengths: ["استراتيجي ومخطط", "مستقل ومركز", "مبدع في حل المشاكل", "يسعى للتميز", "واثق من نفسه"],
                improvements: ["قد يبدو منعزلاً", "يحتاج لتطوير المرونة", "قد يتجاهل المشاعر أحياناً", "غير صبور مع عدم الكفاءة"],
                work: "ممتاز في الأدوار الاستراتيجية والتقنية مثل الهندسة والبحث والإدارة العليا والتخطيط",
                study: "يفضل التعلم المستقل والمواضيع المعقدة والتحليل العميق والتخصص الدقيق",
                relationships: "يقدر العلاقات القليلة والعميقة، ويحتاج لشريك يحترم استقلاليته وأهدافه"
            },
            "ENFJ": {
                name: "المعلم الملهم",
                strengths: ["قائد طبيعي", "متفهم ومتعاطف", "ممتاز في التحفيز", "يطور الآخرين", "رؤية واضحة"],
                improvements: ["قد يهمل احتياجاته الشخصية", "حساس للنقد", "قد يكون مثالياً أكثر من اللازم", "يحتاج لتعلم قول لا"],
                work: "يتفوق في التعليم والإرشاد والموارد البشرية والعلاقات العامة والقيادة",
                study: "يحب التعلم التعاوني والمواضيع الإنسانية والنقاشات الجماعية والمشاريع ذات المعنى",
                relationships: "داعم ومخلص، يستثمر بعمق في علاقاته ويساعد الآخرين على النمو"
            },
            "INFP": {
                name: "الوسيط المثالي",
                strengths: ["مبدع وأصيل", "متفهم ومتعاطف", "مرن ومنفتح", "يقدر الأصالة", "مدفوع بالقيم"],
                improvements: ["قد يكون حساساً جداً", "يتجنب الصراعات", "قد يؤجل المهام", "يحتاج للتحفيز الخارجي"],
                work: "يزدهر في الكتابة والفنون والاستشارة النفسية والعمل الخيري والتصميم",
                study: "يفضل التعلم الذاتي والمواضيع التي تتماشى مع قيمه والتعبير الإبداعي",
                relationships: "مخلص وداعم، يقدر العمق والأصالة في العلاقات ويحترم استقلالية الآخرين"
            },
            "ESTJ": {
                name: "المدير التنفيذي",
                strengths: ["منظم وكفء", "قائد طبيعي", "عملي وواقعي", "موثوق ومسؤول", "يحقق النتائج"],
                improvements: ["قد يكون صارماً جداً", "يقاوم التغيير أحياناً", "قد يتجاهل المشاعر", "يحتاج لتطوير المرونة"],
                work: "يتفوق في الإدارة والأعمال والقانون والهندسة والخدمات المالية",
                study: "يفضل التعلم المنظم والمواضيع العملية والأهداف الواضحة والتطبيق المباشر",
                relationships: "مخلص ومسؤول، يقدر الاستقرار والتقاليد ويعمل بجد لدعم أحبائه"
            },
            "ISTP": {
                name: "الحرفي المبدع",
                strengths: ["عملي ومهاري", "مرن ومتكيف", "مستقل وهادئ", "يحل المشاكل بكفاءة", "واقعي"],
                improvements: ["قد يكون منعزلاً", "يتجنب الالتزامات طويلة المدى", "قد يبدو غير مبالٍ", "يحتاج لتطوير التواصل"],
                work: "يزدهر في الهندسة والحرف والرياضة والطب والتكنولوجيا",
                study: "يفضل التعلم العملي والتجريب المباشر والمواضيع التقنية والعمل الفردي",
                relationships: "مخلص وداعم بطريقة عملية، يقدر الحرية والاستقلالية في العلاقات"
            },
            "ESFP": {
                name: "المؤدي المتحمس",
                strengths: ["متحمس ومرح", "اجتماعي ودود", "مرن وعفوي", "يلهم الآخرين", "متفائل"],
                improvements: ["قد يفتقر للتخطيط", "حساس للنقد", "قد يتجنب الصراعات", "يحتاج للتركيز"],
                work: "يتفوق في الترفيه والتعليم والمبيعات والخدمات والفنون",
                study: "يحب التعلم التفاعلي والمواضيع الممتعة والعمل الجماعي والأنشطة العملية",
                relationships: "دافئ ومحب، يجلب الفرح والحيوية للعلاقات ويقدر اللحظات الجميلة"
            },
            "INFJ": {
                name: "المدافع الحكيم",
                strengths: ["بصيرة عميقة", "مثالي ومبدئي", "مبدع ومتفهم", "مصمم ومثابر", "يلهم التغيير"],
                improvements: ["قد يكون مثالياً جداً", "حساس للنقد", "يحتاج لوقت وحده", "قد يتجنب الصراعات"],
                work: "يزدهر في الاستشارة والكتابة والتعليم والعمل الخيري والفنون",
                study: "يفضل التعلم العميق والمواضيع ذات المعنى والتأمل والبحث المستقل",
                relationships: "مخلص وعميق، يسعى لعلاقات ذات معنى ويدعم نمو الآخرين"
            },
            "ESTP": {
                name: "المقاول المغامر",
                strengths: ["عملي ونشط", "مرن وقابل للتكيف", "اجتماعي وودود", "يحل المشاكل بسرعة", "متفائل"],
                improvements: ["قد يفتقر للتخطيط طويل المدى", "يمل من الروتين", "قد يتخذ قرارات متسرعة", "يحتاج للصبر"],
                work: "يتفوق في المبيعات والرياضة والطوارئ والأعمال والترفيه",
                study: "يفضل التعلم العملي والتفاعلي والمواضيع التطبيقية والأنشطة الجماعية",
                relationships: "مرح وعفوي، يجلب الحيوية والمتعة للعلاقات ويقدر اللحظة الحالية"
            },
            "ISFP": {
                name: "المغامر الفنان",
                strengths: ["مبدع وحساس", "مرن ومنفتح", "متفهم ومتعاطف", "يقدر الجمال", "هادئ ومتواضع"],
                improvements: ["قد يكون حساساً جداً", "يتجنب الصراعات", "قد يؤجل القرارات", "يحتاج للتحفيز"],
                work: "يزدهر في الفنون والتصميم والصحة والتعليم والخدمات الاجتماعية",
                study: "يفضل التعلم الذاتي والمواضيع الإبداعية والبيئة الداعمة والتعبير الشخصي",
                relationships: "مخلص ومتفهم، يقدر الأصالة والعمق في العلاقات ويدعم أحلام الآخرين"
            },
            "ENTJ": {
                name: "القائد الطموح",
                strengths: ["قائد طبيعي", "استراتيجي وحاسم", "واثق ومصمم", "يحفز الآخرين", "كفء ومنظم"],
                improvements: ["قد يكون صارماً جداً", "غير صبور مع عدم الكفاءة", "قد يتجاهل المشاعر", "يحتاج للاستماع أكثر"],
                work: "يتفوق في القيادة والإدارة والأعمال والاستشارات والسياسة",
                study: "يفضل التحدي الفكري والمواضيع المعقدة والقيادة في المشاريع والأهداف الطموحة",
                relationships: "مخلص وداعم، يشجع النمو والتطور ويقدر الشراكة القوية"
            },
            "INTP": {
                name: "المفكر المنطقي",
                strengths: ["مفكر عميق", "مبدع ومبتكر", "مستقل ومرن", "يحب التعلم", "موضوعي ومنطقي"],
                improvements: ["قد يكون منعزلاً", "يؤجل القرارات أحياناً", "قد يتجاهل المشاعر", "يحتاج للتحفيز العملي"],
                work: "يزدهر في البحث والتطوير والتكنولوجيا والأكاديميا والتحليل",
                study: "يفضل التعلم المستقل والمواضيع المعقدة والنظريات والاستكشاف الفكري",
                relationships: "مخلص وداعم فكرياً، يقدر الاستقلالية والعمق في النقاشات"
            },
            "ESFJ": {
                name: "المساعد المخلص",
                strengths: ["متعاطف ومهتم", "منظم وموثوق", "اجتماعي ودود", "يدعم الآخرين", "عملي ومسؤول"],
                improvements: ["قد يهمل احتياجاته الشخصية", "حساس للنقد", "يقاوم التغيير أحياناً", "يحتاج للتقدير"],
                work: "يتفوق في التعليم والصحة والخدمات والموارد البشرية والعمل الاجتماعي",
                study: "يفضل التعلم التعاوني والمواضيع العملية والبيئة الداعمة والتطبيق المباشر",
                relationships: "مخلص ومتفاني، يهتم بسعادة الآخرين ويخلق بيئة دافئة ومرحبة"
            },
            "ISFJ": {
                name: "المدافع المخلص",
                strengths: ["مخلص ومتفاني", "متعاطف ومتفهم", "عملي وموثوق", "صبور ومثابر", "متواضع ومتعاون"],
                improvements: ["قد يهمل احتياجاته الشخصية", "يتجنب الصراعات", "حساس للنقد", "يقاوم التغيير"],
                work: "يزدهر في الصحة والتعليم والخدمات والإدارة والعمل الاجتماعي",
                study: "يفضل التعلم المنظم والمواضيع العملية والبيئة الهادئة والدعم الشخصي",
                relationships: "مخلص وداعم، يهتم بتفاصيل حياة الآخرين ويقدم الدعم العملي والعاطفي"
            },
            "ENTP": {
                name: "المناقش المبدع",
                strengths: ["مبدع ومبتكر", "ذكي وسريع البديهة", "متحمس ومتفائل", "مرن ومتكيف", "يحب التحدي"],
                improvements: ["قد يفتقر للمتابعة", "يمل من الروتين", "قد يتجاهل التفاصيل", "يحتاج للتركيز"],
                work: "يتفوق في ريادة الأعمال والاستشارات والتسويق والإعلام والابتكار",
                study: "يفضل التعلم التفاعلي والمواضيع المتنوعة والنقاشات والمشاريع الإبداعية",
                relationships: "مثير ومحفز، يجلب الأفكار الجديدة والطاقة الإيجابية للعلاقات"
            },
            "ISTJ": {
                name: "المنطقي المسؤول",
                strengths: ["موثوق ومسؤول", "منظم ومنهجي", "عملي وواقعي", "مثابر ومصمم", "مخلص ومتفاني"],
                improvements: ["قد يقاوم التغيير", "يحتاج لتطوير المرونة", "قد يتجاهل الإمكانيات الجديدة", "يحتاج للانفتاح"],
                work: "يتفوق في المحاسبة والإدارة والقانون والطب والخدمات الحكومية",
                study: "يفضل التعلم المنظم والمواضيع العملية والطرق التقليدية والأهداف الواضحة",
                relationships: "مخلص وموثوق، يقدر الاستقرار والتقاليد ويدعم أحبائه بطريقة عملية"
            }
        };

        const pathNames = {
            1: "المسار الشامل",
            2: "المسار السريع",
            3: "مسار العمل",
            4: "مسار العلاقات",
            5: "مسار التأكيد"
        };




        function getAllAnswers() {
            const allAnswers = [...answers];
            Object.values(allPathAnswers).forEach(pathAnswers => {
                allAnswers.push(...pathAnswers);
            });
            return allAnswers;
        }

        function showResults() {
            console.log('🎯 showResults() called');
            console.log('Current scores:', scores);
            console.log('All path answers:', allPathAnswers);
            console.log('Completed paths:', completedPaths);

            try {
                stopTimer();

                // Increment completed tests counter
                incrementCompletedTests();

                // إخفاء شاشة الاختبار وإظهار النتائج
                const testScreen = document.getElementById('testScreen');
                const progressContainer = document.getElementById('progressContainer');
                const resultsScreen = document.getElementById('resultsScreen');

                console.log('🔍 Elements found:', {
                    testScreen: !!testScreen,
                    progressContainer: !!progressContainer,
                    resultsScreen: !!resultsScreen
                });

                if (testScreen) testScreen.classList.add('fade-out');

                setTimeout(() => {
                    try {
                        if (testScreen) {
                            testScreen.classList.add('hidden');
                            testScreen.classList.remove('fade-out');
                        }
                        if (progressContainer) progressContainer.classList.add('hidden');
                        if (resultsScreen) {
                            resultsScreen.classList.remove('hidden');
                            resultsScreen.classList.add('fade-in');
                        }

                        console.log('✅ Screen transition completed, calling populateResults...');

                        // ملء البيانات
                        populateResults();

                    } catch (error) {
                        console.error('❌ Error in screen transition:', error);
                        // Fallback: show results directly
                        forceShowResults();
                    }
                }, 400);

            } catch (error) {
                console.error('❌ Critical error in showResults:', error);
                // Fallback: show results directly
                forceShowResults();
            }
        }

        function forceShowResults() {
            console.log('🚨 Force showing results...');

            // إخفاء جميع الشاشات الأخرى
            const allScreens = ['welcomeScreen', 'testScreen', 'progressContainer'];
            allScreens.forEach(screenId => {
                const screen = document.getElementById(screenId);
                if (screen) {
                    screen.classList.add('hidden');
                    screen.classList.remove('fade-in', 'fade-out');
                }
            });

            // إظهار شاشة النتائج مباشرة
            const resultsScreen = document.getElementById('resultsScreen');
            if (resultsScreen) {
                resultsScreen.classList.remove('hidden');
                resultsScreen.classList.add('fade-in');

                // ملء البيانات مباشرة
                setTimeout(() => {
                    populateResults();
                }, 100);
            } else {
                console.error('❌ Results screen not found!');
                // alert('حدث خطأ في عرض النتائج. يرجى إعادة تحميل الصفحة.');
            }
        }
        let personality;
        let type;
        calcS()
        function calcS() {
            if (scores.E) {
                populateResults();
                return;

            }

            scores = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };
            let allAnswers = getAllAnswers();
            allAnswers = allAnswers.map(x => {
                if (x.path == 4) {
                    return JSON.parse(x["dimension"]);
                } else if (x.path == 2) {
                    return Object.fromEntries(x.dimension.split(',').map(s => s.split(':')));;
                } else {
                    return x["dimension"]
                }
            })
            allAnswers.forEach(x => {
                if (typeof (x) == "string") {
                    scores[x]++
                } else {
                    Object.keys(x).forEach(dim => {
                        scores[dim] += +x[dim];
                    })
                }
            })
            populateResults()
        }
        function populateResults() {
            try {
                type = calculatePersonalityType();
                console.log('✅ Calculated personality type:', type);

                personality = personalityTypes[type] || personalityTypes['ENFP'];
                console.log('✅ Personality data:', personality);

                const totalQuestions = Object.values(allPathAnswers).reduce((sum, pathAnswers) => sum + pathAnswers.length, 0);
                const totalTimeSpent = Math.floor(endTime / 1000 / 60);

                console.log('📈 Stats:', { totalQuestions, totalTimeSpent, type });

                // تحديث العناصر مع فحص وجودها
                const elements = {
                    userNameDisplay: document.getElementById('userNameDisplay'),
                    pathUsed: document.getElementById('pathUsed'),
                    personalityType: document.getElementById('personalityType'),
                    personalityName: document.getElementById('personalityName'),
                    confidenceLevel: document.getElementById('confidenceLevel'),
                    strengths: document.getElementById('strengths'),
                    improvements: document.getElementById('improvements'),
                    workAdvice: document.getElementById('workAdvice'),
                    studyAdvice: document.getElementById('studyAdvice'),
                    relationshipAdvice: document.getElementById('relationshipAdvice')
                };

                console.log('🔍 Elements check:', Object.keys(elements).map(key => `${key}: ${!!elements[key]}`));

                // تحديث العناصر الأساسية
                if (elements.userNameDisplay) {
                    elements.userNameDisplay.innerHTML = `نمطك الشخصي يا <strong>${userName}</strong> هو:`;
                    console.log('✅ Updated userNameDisplay');
                }

                if (elements.pathUsed) {
                    let timingInfo = `تم إكمال جميع المسارات الخمسة (${totalQuestions} سؤال في ${totalTimeSpent} دقيقة)`;
                    elements.pathUsed.innerHTML = timingInfo;
                    console.log('✅ Updated pathUsed');
                }

                if (elements.personalityType) {
                    elements.personalityType.textContent = type;
                    console.log('✅ Updated personalityType:', type);
                }

                if (elements.personalityName) {
                    elements.personalityName.textContent = personality.name;
                    console.log('✅ Updated personalityName:', personality.name);
                }

                const confidenceLevel = calculateConfidenceLevel();
                if (elements.confidenceLevel) {
                    elements.confidenceLevel.textContent = confidenceLevel;
                    console.log('✅ Updated confidenceLevel:', confidenceLevel);
                }

                if (elements.strengths) {
                    elements.strengths.innerHTML = personality.strengths.map(strength =>
                        `<li class="flex items-center"><span class="text-green-600 ml-2">✓</span>${strength}</li>`
                    ).join('');
                    console.log('✅ Updated strengths');
                }

                if (elements.improvements) {
                    elements.improvements.innerHTML = personality.improvements.map(improvement =>
                        `<li class="flex items-center"><span class="text-orange-600 ml-2">→</span>${improvement}</li>`
                    ).join('');
                    console.log('✅ Updated improvements');
                }

                if (elements.workAdvice) {
                    elements.workAdvice.textContent = personality.work;
                    console.log('✅ Updated workAdvice');
                }

                if (elements.studyAdvice) {
                    elements.studyAdvice.textContent = personality.study;
                    console.log('✅ Updated studyAdvice');
                }

                if (elements.relationshipAdvice) {
                    elements.relationshipAdvice.textContent = personality.relationships;
                    console.log('✅ Updated relationshipAdvice');
                }

                // عرض التحليلات المتقدمة
                console.log('🔄 Starting advanced analytics...');
                try {
                    showPersonalityExplanation(type);
                    console.log('✅ showPersonalityExplanation completed');

                    showDimensionsAnalysis();
                    console.log('✅ showDimensionsAnalysis completed');

                    showAdvancedAnalytics();
                    console.log('✅ showAdvancedAnalytics completed');

                    showPathPerformance();
                    console.log('✅ showPathPerformance completed');

                    showTimingStatistics();
                    console.log('✅ showTimingStatistics completed');

                } catch (error) {
                    console.error('❌ Error in advanced analytics:', error);
                    // Continue even if advanced analytics fail
                }

                // عرض تحذيرات الصحة إذا لزم الأمر
                try {
                    // const validationResult = validateResults();
                    // if (!validationResult.isValid) {
                    //     showValidationWarnings(validationResult.issues);
                    //     console.log('⚠️ Validation warnings shown');
                    // }
                } catch (error) {
                    console.error('❌ Error in validation:', error);
                }



                // إظهار رسالة نجاح للمستخدم
                // showResultsSuccessMessage();

            } catch (error) {
                console.error('❌ Critical error in populateResults:', error);

                // Fallback: show basic results
                showBasicResults();
            }
        }
        async function downloadPDF() {
            print()
        }

        // وظيفة احتياطية لعرض النتائج الأساسية
        function showBasicResults() {
            console.log('🚨 Showing basic results as fallback...');

            try {
                const type = calculatePersonalityType();
                const personality = personalityTypes[type] || personalityTypes['ENFP'];

                // إنشاء محتوى أساسي للنتائج
                const resultsScreen = document.getElementById('resultsScreen');
                if (resultsScreen) {
                    resultsScreen.innerHTML = `
                        <div class="max-w-4xl mx-auto">
                            <div class="bg-white rounded-lg card-shadow p-8">
                                <div class="text-center mb-8">
                                    <div class="w-24 h-24 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                        <svg class="w-12 h-12 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                    </div>
                                    <h2 class="text-3xl font-bold text-gray-800 mb-4">🎉 تهانينا! اكتمل الاختبار</h2>
                                    <div class="text-2xl font-semibold text-blue-600 mb-4">نمطك الشخصي يا <strong>${userName}</strong> هو:</div>
                                </div>

                                <div class="mb-8">
                                    <div class="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-8 rounded-lg text-center mb-6">
                                        <div class="text-5xl font-bold mb-3">${type}</div>
                                        <div class="text-2xl mb-4">${personality.name}</div>
                                        <div class="bg-white bg-opacity-20 rounded-full px-6 py-2 inline-block">
                                            <span class="text-lg font-medium">مستوى الثقة: ${calculateConfidenceLevel()}%</span>
                                        </div>
                                    </div>

                                    <div class="grid md:grid-cols-2 gap-6 mb-6">
                                        <div class="bg-green-50 p-6 rounded-lg">
                                            <h4 class="font-semibold text-green-800 mb-3 text-lg">✨ نقاط القوة</h4>
                                            <ul class="text-green-700 space-y-2">
                                                ${personality.strengths.map(strength => `<li class="flex items-center"><span class="text-green-600 ml-2">✓</span>${strength}</li>`).join('')}
                                            </ul>
                                        </div>
                                        <div class="bg-orange-50 p-6 rounded-lg">
                                            <h4 class="font-semibold text-orange-800 mb-3 text-lg">🎯 مجالات التطوير</h4>
                                            <ul class="text-orange-700 space-y-2">
                                                ${personality.improvements.map(improvement => `<li class="flex items-center"><span class="text-orange-600 ml-2">→</span>${improvement}</li>`).join('')}
                                            </ul>
                                        </div>
                                    </div>

                                    <div class="grid md:grid-cols-3 gap-6">
                                        <div class="bg-blue-50 p-6 rounded-lg">
                                            <h4 class="font-semibold text-blue-800 mb-3">💼 في العمل</h4>
                                            <p class="text-blue-700 text-sm">${personality.work}</p>
                                        </div>
                                        <div class="bg-purple-50 p-6 rounded-lg">
                                            <h4 class="font-semibold text-purple-800 mb-3">📚 في الدراسة</h4>
                                            <p class="text-purple-700 text-sm">${personality.study}</p>
                                        </div>
                                        <div class="bg-pink-50 p-6 rounded-lg">
                                            <h4 class="font-semibold text-pink-800 mb-3">❤️ في العلاقات</h4>
                                            <p class="text-pink-700 text-sm">${personality.relationships}</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="text-center space-x-4 space-x-reverse">
                                    <button onclick="downloadPDF()" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-300 transform hover:scale-105">
                                        📄 حفظ كـ PDF
                                    </button>
                                    <button onclick="restartTest()" class="bg-gray-600 hover:bg-gray-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-300">
                                        الانتقال للاختبار الثالث (الذكاءات) 
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;

                    console.log('✅ Basic results displayed successfully');
                }
            } catch (error) {
                console.error('❌ Even basic results failed:', error);
                // alert('تم إكمال الاختبار بنجاح!\n\nنمط شخصيتك: ' + calculatePersonalityType() + '\n\nيرجى إعادة تحميل الصفحة لعرض التفاصيل الكاملة.');
            }
        }

        // رسالة نجاح عرض النتائج
        function showResultsSuccessMessage() {
            const messageDiv = document.createElement('div');
            messageDiv.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg z-50 max-w-sm';
            messageDiv.innerHTML = `
                <div class="flex items-center">
                    <svg class="w-6 h-6 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <div>
                        <div class="font-bold">تم عرض النتائج بنجاح!</div>
                        <div class="text-sm opacity-90">تحليل شامل لنمط شخصيتك</div>
                    </div>
                </div>
            `;
            document.body.appendChild(messageDiv);

            setTimeout(() => {
                if (messageDiv.parentNode) {
                    messageDiv.parentNode.removeChild(messageDiv);
                }
            }, 4000);
        }

        // وظيفة التحقق من صحة النتائج
        function validateResults() {
            const issues = [];
            let isValid = true;

            // جمع جميع الإجابات للتحليل
            const allAnswers = getAllAnswers();
            const totalAnswers = allAnswers.length;

            // التحقق من وجود إجابات كافية
            if (totalAnswers < 30) {
                issues.push(`عدد الإجابات قليل: ${totalAnswers} (الحد الأدنى: 30)`);
                isValid = false;
            }

            // حساب الأوزان المحسنة للتحقق
            const dimensionWeights = calculateDimensionWeights(allAnswers);
            const totalWeights = Object.values(dimensionWeights).reduce((sum, weight) => sum + weight, 0);

            if (totalWeights === 0) {
                issues.push('لا توجد نقاط موزونة محسوبة');
                isValid = false;
            }

            // التحقق من توازن الأبعاد بناءً على الأوزان المحسنة
            const dimensions = [
                { name: 'EI', dims: ['E', 'I'] },
                { name: 'SN', dims: ['S', 'N'] },
                { name: 'TF', dims: ['T', 'F'] },
                { name: 'JP', dims: ['J', 'P'] }
            ];

            let validDimensions = 0;
            let totalClarity = 0;

            dimensions.forEach(dim => {
                const result = calculateDimensionType(dim.dims, dimensionWeights);
                const total = Object.values(result.scores).reduce((sum, score) => sum + score, 0);

                if (total === 0) {
                    issues.push(`لا توجد بيانات في البُعد ${dim.name}`);
                    isValid = false;
                } else if (total < 2) {
                    issues.push(`بيانات قليلة في البُعد ${dim.name}: ${total.toFixed(1)}`);
                } else {
                    validDimensions++;
                    totalClarity += result.difference;

                    // تحذير للأبعاد غير الواضحة
                    if (result.difference < 5) {
                        issues.push(`البُعد ${dim.name} غير واضح (${result.difference.toFixed(1)}% فرق)`);
                    }
                }
            });

            // حساب متوسط الوضوح
            const avgClarity = validDimensions > 0 ? totalClarity / validDimensions : 0;

            // التحقق من الاتساق الزمني المحسن
            const timings = allAnswers.map(a => a.timeSpent).filter(t => t > 0);
            if (timings.length > 0) {
                const avgTime = timings.reduce((sum, t) => sum + t, 0) / timings.length;
                const veryFastCount = timings.filter(t => t < 2).length;
                const fastRatio = veryFastCount / timings.length;
                const verySlowCount = timings.filter(t => t > 60).length;
                const slowRatio = verySlowCount / timings.length;

                if (fastRatio > 0.4) {
                    issues.push(`نسبة عالية من الإجابات السريعة جداً: ${(fastRatio * 100).toFixed(1)}%`);
                }

                if (slowRatio > 0.2) {
                    issues.push(`نسبة عالية من الإجابات البطيئة جداً: ${(slowRatio * 100).toFixed(1)}%`);
                }

                if (avgTime < 4) {
                    issues.push(`متوسط وقت الإجابة منخفض: ${avgTime.toFixed(1)} ثانية`);
                }
            }

            // التحقق من اكتمال المسارات
            if (completedPaths.length < 5) {
                issues.push(`لم يتم إكمال جميع المسارات: ${completedPaths.length}/5`);
                isValid = false;
            }

            // التحقق من جودة الإجابات المحسن
            if (consistencyScore < 60) {
                issues.push(`مستوى اتساق منخفض: ${consistencyScore}%`);
            }

            // التحقق من وضوح النتائج
            if (avgClarity < 15) {
                issues.push(`وضوح النتائج منخفض: ${avgClarity.toFixed(1)}%`);
            }

            // التحقق من التناقضات
            if (contradictionFlags.length > 3) {
                issues.push(`عدد كبير من التناقضات: ${contradictionFlags.length}`);
            }

            // التحقق من الأنماط العشوائية
            if (randomAnswerPattern > 2) {
                issues.push(`أنماط إجابة عشوائية مشتبهة: ${randomAnswerPattern}`);
            }

            // التحقق من تنوع المسارات
            const pathDiversity = new Set(allAnswers.map(a => a.path)).size;
            if (pathDiversity < 4) {
                issues.push(`تنوع قليل في المسارات: ${pathDiversity}/5`);
            }

            // تقييم الجودة الإجمالية
            let qualityScore = 100;
            qualityScore -= (fastRatio * 30); // خصم للإجابات السريعة
            qualityScore -= (contradictionFlags.length * 5); // خصم للتناقضات
            qualityScore -= ((100 - consistencyScore) * 0.3); // خصم لعدم الاتساق
            qualityScore += (avgClarity * 0.2); // مكافأة للوضوح

            if (qualityScore < 70) {
                issues.push(`نقاط الجودة الإجمالية منخفضة: ${qualityScore.toFixed(1)}/100`);
            }

            console.log('نتائج التحقق المحسن:', {
                isValid,
                issues,
                totalAnswers,
                avgClarity: avgClarity.toFixed(1),
                consistencyScore,
                qualityScore: qualityScore.toFixed(1),
                fastRatio: (fastRatio * 100).toFixed(1) + '%'
            });

            return { isValid, issues, qualityScore: Math.round(qualityScore) };
        }

        // وظيفة عرض تحذيرات الصحة
        function showValidationWarnings(issues) {
            const warningContainer = document.createElement('div');
            warningContainer.className = 'bg-yellow-50 border-2 border-yellow-300 rounded-xl p-4 mb-6';
            warningContainer.innerHTML = `
                <div class="flex items-center mb-3">
                    <span class="text-2xl ml-2">⚠️</span>
                    <h4 class="text-lg font-bold text-yellow-800">تنبيه حول جودة النتائج</h4>
                </div>
                <div class="text-yellow-700 text-sm space-y-1">
                    <p class="font-medium mb-2">تم اكتشاف بعض المشاكل التي قد تؤثر على دقة النتائج:</p>
                    <ul class="list-disc list-inside space-y-1">
                        ${issues.map(issue => `<li>${issue}</li>`).join('')}
                    </ul>
                    <p class="mt-3 font-medium">💡 للحصول على نتائج أكثر دقة، يُنصح بإعادة الاختبار مع قراءة الأسئلة بعناية أكبر.</p>
                </div>
            `;

            // إدراج التحذير قبل النتائج
            const resultsContainer = document.querySelector('#personalityResult');
            if (resultsContainer) {
                resultsContainer.insertBefore(warningContainer, resultsContainer.firstChild);
            }
        }

        function showPersonalityExplanation(type) {
            const explanationContainer = document.getElementById('personalityExplanation');

            // تحليل كل بُعد من أبعاد الشخصية
            const dimensions = [
                {
                    name: 'مصدر الطاقة',
                    icon: '⚡',
                    e_letter: 'E',
                    i_letter: 'I',
                    e_name: 'الانبساط (Extraversion)',
                    i_name: 'الانطواء (Introversion)',
                    e_score: scores.E,
                    i_score: scores.I,
                    e_desc: 'تستمد طاقتك من التفاعل مع العالم الخارجي والأشخاص. تحب المناسبات الاجتماعية وتفكر بصوت عالٍ.',
                    i_desc: 'تستمد طاقتك من العالم الداخلي والتأمل. تفضل التفكير قبل التحدث وتحتاج لوقت منفرد لإعادة شحن طاقتك.',
                    tie_desc: 'لديك توازن بين الانبساط والانطواء. تستطيع التكيف مع المواقف الاجتماعية والهادئة بنفس الدرجة.'
                },
                {
                    name: 'جمع المعلومات',
                    icon: '🔍',
                    e_letter: 'S',
                    i_letter: 'N',
                    e_name: 'الحسّي (Sensing)',
                    i_name: 'الحدسي (Intuition)',
                    e_score: scores.S,
                    i_score: scores.N,
                    e_desc: 'تركز على الحقائق والتفاصيل الملموسة. تثق في الخبرة العملية وتفضل المعلومات الواضحة والمحددة.',
                    i_desc: 'تركز على الأنماط والإمكانيات المستقبلية. تثق في حدسك وتحب استكشاف الأفكار والمفاهيم المجردة.',
                    tie_desc: 'تجمع بين التركيز على التفاصيل والرؤية الشاملة. تستطيع التعامل مع الحقائق والأفكار المجردة بنفس الكفاءة.'
                },
                {
                    name: 'اتخاذ القرارات',
                    icon: '⚖️',
                    e_letter: 'T',
                    i_letter: 'F',
                    e_name: 'التفكير (Thinking)',
                    i_name: 'الشعور (Feeling)',
                    e_score: scores.T,
                    i_score: scores.F,
                    e_desc: 'تتخذ قراراتك بناءً على التحليل المنطقي والموضوعية. تقدر العدالة والكفاءة في اتخاذ القرارات.',
                    i_desc: 'تتخذ قراراتك بناءً على القيم الشخصية والتأثير على الآخرين. تقدر الانسجام والتفهم في التعامل.',
                    tie_desc: 'توازن بين المنطق والمشاعر في اتخاذ القرارات. تستطيع تقدير الجوانب الموضوعية والإنسانية معاً.'
                },
                {
                    name: 'نمط الحياة',
                    icon: '📅',
                    e_letter: 'J',
                    i_letter: 'P',
                    e_name: 'الحكم (Judging)',
                    i_name: 'الإدراك (Perceiving)',
                    e_score: scores.J,
                    i_score: scores.P,
                    e_desc: 'تفضل الحياة المنظمة والمخططة. تحب اتخاذ القرارات بسرعة وإنهاء المهام في مواعيدها.',
                    i_desc: 'تفضل الحياة المرنة والعفوية. تحب إبقاء الخيارات مفتوحة وتتكيف مع الظروف المتغيرة.',
                    tie_desc: 'تجمع بين التنظيم والمرونة. تستطيع التخطيط عند الحاجة والتكيف مع التغييرات بسهولة.'
                }
            ];

            let explanationHTML = '';

            dimensions.forEach((dim, index) => {
                const total = dim.e_score + dim.i_score;
                const e_percent = total > 0 ? Math.round((dim.e_score / total) * 100) : 50;
                const i_percent = 100 - e_percent;

                let dominantType, dominantDesc, dominantPercent;
                let isDominant = true;

                if (dim.e_score > dim.i_score) {
                    dominantType = dim.e_name;
                    dominantDesc = dim.e_desc;
                    dominantPercent = e_percent;
                } else if (dim.i_score > dim.e_score) {
                    dominantType = dim.i_name;
                    dominantDesc = dim.i_desc;
                    dominantPercent = i_percent;
                } else {
                    dominantType = `${dim.e_name} / ${dim.i_name}`;
                    dominantDesc = dim.tie_desc;
                    dominantPercent = 50;
                    isDominant = false;
                }

                const bgColor = index % 2 === 0 ? 'bg-white' : 'bg-indigo-25';
                const borderColor = isDominant ? 'border-indigo-300' : 'border-yellow-300';
                const headerColor = isDominant ? 'text-indigo-800' : 'text-yellow-800';

                explanationHTML += `
                    <div class="${bgColor} ${borderColor} border-2 rounded-xl p-6">
                        <div class="flex items-center mb-4">
                            <span class="text-2xl ml-3">${dim.icon}</span>
                            <div class="flex-1">
                                <h4 class="text-lg font-bold ${headerColor}">${dim.name}</h4>
                                <div class="text-sm text-gray-600">
                                    ${dim.e_letter}: ${dim.e_score} نقطة | ${dim.i_letter}: ${dim.i_score} نقطة
                                </div>
                            </div>
                            ${isDominant ? `
                                <div class="bg-indigo-100 text-indigo-800 px-3 py-1 rounded-full text-sm font-medium">
                                    ${dominantPercent}%
                                </div>
                            ` : `
                                <div class="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm font-medium">
                                    متوازن 50/50
                                </div>
                            `}
                        </div>
                        
                        <div class="mb-4">
                            <div class="font-semibold text-gray-800 mb-2">
                                ${isDominant ? '🎯 النمط المهيمن:' : '⚖️ التوازن:'} ${dominantType}
                            </div>
                            <p class="text-gray-700 leading-relaxed">${dominantDesc}</p>
                        </div>
                        
                        <!-- شريط التقدم المرئي -->
                        <div class="mb-3">
                            <div class="flex justify-between text-xs text-gray-600 mb-1">
                                <span>${dim.e_name}</span>
                                <span>${dim.i_name}</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-3 relative">
                                <div class="bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full transition-all duration-1000" 
                                     style="width: ${e_percent}%"></div>
                                ${!isDominant ? `
                                    <div class="absolute top-0 left-1/2 transform -translate-x-1/2 w-1 h-3 bg-yellow-400"></div>
                                ` : ''}
                            </div>
                            <div class="flex justify-between text-xs text-gray-500 mt-1">
                                <span>${e_percent}%</span>
                                <span>${i_percent}%</span>
                            </div>
                        </div>
                        
                        ${!isDominant ? `
                            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-3 mt-3">
                                <div class="flex items-center text-yellow-800 text-sm">
                                    <span class="ml-2">⚡</span>
                                    <strong>ميزة التوازن:</strong> لديك مرونة عالية في التكيف مع مختلف المواقف والأشخاص
                                </div>
                            </div>
                        ` : ''}
                    </div>
                `;
            });

            // إضافة ملخص شامل
            const typeLetters = type.split('').join(' - ');
            explanationHTML += `
                <div class="bg-gradient-to-r from-purple-100 to-indigo-100 border-2 border-purple-300 rounded-xl p-6 mt-6">
                    <div class="text-center mb-4">
                        <h4 class="text-xl font-bold text-purple-800 mb-2">🎭 ملخص نمط شخصيتك</h4>
                        <div class="text-2xl font-bold text-purple-900 mb-2">${typeLetters}</div>
                        <div class="text-purple-700">${personalityTypes[type]?.name || 'نمط شخصية مميز'}</div>
                    </div>
                    
                    <div class="grid md:grid-cols-2 gap-4">
                        <div class="bg-white rounded-lg p-4">
                            <h5 class="font-semibold text-purple-800 mb-2">🌟 خصائصك المميزة</h5>
                            <ul class="text-sm text-purple-700 space-y-1">
                                <li>• نمط شخصية واضح ومحدد</li>
                                <li>• توازن في الأبعاد الشخصية</li>
                                <li>• قدرة على التكيف مع المواقف المختلفة</li>
                                <li>• فهم عميق للذات والآخرين</li>
                            </ul>
                        </div>
                        
                        <div class="bg-white rounded-lg p-4">
                            <h5 class="font-semibold text-purple-800 mb-2">💡 نصائح للتطوير</h5>
                            <ul class="text-sm text-purple-700 space-y-1">
                                <li>• طور نقاط قوتك الطبيعية</li>
                                <li>• اعمل على تحسين نقاط الضعف</li>
                                <li>• استفد من فهمك لنمط شخصيتك</li>
                                <li>• طبق ما تعلمته في حياتك اليومية</li>
                            </ul>
                        </div>
                    </div>
                </div>
            `;

            explanationContainer.innerHTML = explanationHTML;
        }



        function calculatePersonalityType() {
            let type = '';

            // حساب النمط بناءً على النقاط مع نظام موثوقية محسن
            console.log('النقاط النهائية:', scores);

            // جمع جميع الإجابات لتحليل أعمق
            const allAnswers = getAllAnswers();
            const dimensionWeights = calculateDimensionWeights(allAnswers);

            // E vs I - مصدر الطاقة
            const eiResult = calculateDimensionType(['E', 'I'], dimensionWeights);
            type += eiResult.type;

            // S vs N - جمع المعلومات  
            const snResult = calculateDimensionType(['S', 'N'], dimensionWeights);
            type += snResult.type;

            // T vs F - اتخاذ القرارات
            const tfResult = calculateDimensionType(['T', 'F'], dimensionWeights);
            type += tfResult.type;

            // J vs P - نمط الحياة
            const jpResult = calculateDimensionType(['J', 'P'], dimensionWeights);
            type += jpResult.type;

            console.log('النمط المحسوب:', type);
            console.log('تفاصيل الحساب:', {
                EI: eiResult,
                SN: snResult,
                TF: tfResult,
                JP: jpResult
            });

            return type;
        }

        // حساب أوزان الأبعاد بناءً على جودة الإجابات
        function calculateDimensionWeights(allAnswers) {
            const weights = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };

            allAnswers.forEach(answer => {
                // حساب وزن الإجابة بناءً على عدة عوامل
                let weight = 1.0;

                // تقليل الوزن للإجابات السريعة جداً
                if (answer.timeSpent < 2) {
                    weight *= 0.3;
                } else if (answer.timeSpent < 4) {
                    weight *= 0.7;
                } else if (answer.timeSpent > 60) {
                    weight *= 0.8; // تقليل طفيف للإجابات البطيئة جداً
                }

                // زيادة الوزن للمسارات المتخصصة
                if (answer.path === 3 || answer.path === 4) { // مسار العمل والعلاقات
                    weight *= 1.2;
                }

                // زيادة الوزن للأسئلة المعقدة (ترتيب، خيارات متعددة)
                if (answer.type === 'ranking' || answer.type === 'checkbox') {
                    weight *= 1.3;
                }

                // زيادة الوزن للأسئلة المقياسية
                if (answer.type === 'scale') {
                    weight *= 1.1;
                }

                // توزيع الوزن على الأبعاد
                if (typeof answer.dimension === 'string' && weights.hasOwnProperty(answer.dimension)) {
                    weights[answer.dimension] += weight;
                } else if (answer.dimension && (typeof answer.dimension === 'object' || answer.dimension.includes(':'))) {
                    try {
                        let dimensionScores;
                        if (answer.dimension.includes(':')) {
                            dimensionScores = {};
                            const parts = answer.dimension.split(',');
                            parts.forEach(part => {
                                const [dim, score] = part.split(':');
                                if (weights.hasOwnProperty(dim)) {
                                    dimensionScores[dim] = parseInt(score);
                                }
                            });
                        } else {
                            dimensionScores = JSON.parse(answer.dimension);
                        }

                        Object.keys(dimensionScores).forEach(dim => {
                            if (weights.hasOwnProperty(dim)) {
                                weights[dim] += dimensionScores[dim] * weight;
                            }
                        });
                    } catch (e) {
                        console.log('Could not parse complex dimension for weighting');
                    }
                }
            });

            return weights;
        }

        // حساب نوع البُعد بناءً على الأوزان المحسنة
        function calculateDimensionType(dimensions, weights) {
            const [dim1, dim2] = dimensions;
            const score1 = weights[dim1];
            const score2 = weights[dim2];
            const total = score1 + score2;

            if (total === 0) {
                // في حالة عدم وجود بيانات، استخدم التفضيل الافتراضي
                return {
                    type: dim1,
                    confidence: 0,
                    percentage: 50,
                    reason: 'no_data_default'
                };
            }

            const percentage1 = Math.round((score1 / total) * 100);
            const percentage2 = 100 - percentage1;
            const difference = Math.abs(percentage1 - percentage2);

            // تحديد النوع المهيمن
            let dominantType, dominantPercentage;
            if (score1 > score2) {
                dominantType = dim1;
                dominantPercentage = percentage1;
            } else if (score2 > score1) {
                dominantType = dim2;
                dominantPercentage = percentage2;
            } else {
                // في حالة التعادل التام، استخدم الإجابات الأحدث
                const recentPreference = getRecentPreference(dimensions);
                dominantType = recentPreference || dim1;
                dominantPercentage = 50;
            }

            // حساب مستوى الثقة
            let confidence;
            if (difference >= 40) {
                confidence = 'high'; // ثقة عالية
            } else if (difference >= 20) {
                confidence = 'medium'; // ثقة متوسطة
            } else if (difference >= 10) {
                confidence = 'low'; // ثقة منخفضة
            } else {
                confidence = 'balanced'; // متوازن
            }

            return {
                type: dominantType,
                confidence: confidence,
                percentage: dominantPercentage,
                difference: difference,
                scores: { [dim1]: score1, [dim2]: score2 },
                reason: difference < 5 ? 'very_close' : 'clear_preference'
            };
        }

        // وظيفة مساعدة لاختيار التفضيل الأحدث في حالة التوازن
        function getRecentPreference(dimensions) {
            const allAnswers = getAllAnswers();
            const recentAnswers = allAnswers.slice(-10); // آخر 10 إجابات

            let counts = {};
            dimensions.forEach(dim => counts[dim] = 0);

            recentAnswers.forEach(answer => {
                if (typeof answer.dimension === 'string' && dimensions.includes(answer.dimension)) {
                    counts[answer.dimension]++;
                } else if (typeof answer.dimension === 'object' || (answer.dimension && answer.dimension.includes(':'))) {
                    // معالجة الإجابات المعقدة (مقياس، ترتيب، خيارات متعددة)
                    try {
                        let dimensionScores;
                        if (answer.dimension.includes(':')) {
                            dimensionScores = {};
                            const parts = answer.dimension.split(',');
                            parts.forEach(part => {
                                const [dim, score] = part.split(':');
                                if (dimensions.includes(dim)) {
                                    dimensionScores[dim] = parseInt(score);
                                }
                            });
                        } else {
                            dimensionScores = JSON.parse(answer.dimension);
                        }

                        Object.keys(dimensionScores).forEach(dim => {
                            if (dimensions.includes(dim)) {
                                counts[dim] += dimensionScores[dim];
                            }
                        });
                    } catch (e) {
                        console.log('Could not parse complex dimension');
                    }
                }
            });

            // إرجاع البُعد الأعلى نقاطاً
            return Object.keys(counts).reduce((a, b) => counts[a] > counts[b] ? a : b);
        }

        function calculateConfidenceLevel() {
            const totalQuestions = Object.values(allPathAnswers).reduce((sum, pathAnswers) => sum + pathAnswers.length, 0);

            // كشف التناقضات
            detectContradictions();

            // جمع جميع الإجابات لتحليل أعمق
            const allAnswers = getAllAnswers();
            const dimensionWeights = calculateDimensionWeights(allAnswers);

            // حساب وضوح كل بُعد بناءً على الأوزان المحسنة
            const dimensions = [
                { name: 'EI', dims: ['E', 'I'] },
                { name: 'SN', dims: ['S', 'N'] },
                { name: 'TF', dims: ['T', 'F'] },
                { name: 'JP', dims: ['J', 'P'] }
            ];

            let totalClarity = 0;
            let validDimensions = 0;
            let dimensionResults = [];

            dimensions.forEach(dim => {
                const result = calculateDimensionType(dim.dims, dimensionWeights);
                if (result.scores) {
                    const total = Object.values(result.scores).reduce((sum, score) => sum + score, 0);
                    if (total > 0) {
                        totalClarity += result.difference;
                        validDimensions++;
                        dimensionResults.push({
                            name: dim.name,
                            clarity: result.difference,
                            confidence: result.confidence,
                            total: total
                        });
                        console.log(`${dim.name}: وضوح ${result.difference}%, ثقة: ${result.confidence}`);
                    }
                }
            });

            const avgClarity = validDimensions > 0 ? totalClarity / validDimensions : 0;
            console.log('متوسط الوضوح المحسن:', avgClarity.toFixed(1) + '%');

            // حساب مستوى الثقة المحسن بناءً على عوامل متعددة
            let baseConfidence = 70; // قاعدة أكثر واقعية

            // مكافأة الوضوح المحسن (بناءً على الأوزان)
            const clarityBonus = Math.min(25, (avgClarity / 100) * 25);

            // مكافأة عدد الأسئلة مع حد أقصى واقعي
            const questionBonus = Math.min(8, (totalQuestions / 50) * 8);

            // مكافأة إكمال جميع المسارات
            const pathCompletionBonus = (completedPaths.length / 5) * 6;

            // مكافأة جودة الإجابات (وقت مناسب)
            const timings = allAnswers.map(a => a.timeSpent).filter(t => t > 0);
            let qualityBonus = 0;
            if (timings.length > 0) {
                const avgTime = timings.reduce((sum, t) => sum + t, 0) / timings.length;
                const goodTimingRatio = timings.filter(t => t >= 4 && t <= 30).length / timings.length;
                qualityBonus = goodTimingRatio * 8; // مكافأة للأوقات المناسبة
            }

            // مكافأة التنوع في المسارات
            const pathDiversityBonus = completedPaths.length >= 4 ? 3 : 0;

            // خصم للإجابات السريعة المفرطة (أكثر دقة)
            const quickRatio = totalQuestions > 0 ? quickAnswerCount / totalQuestions : 0;
            const quickAnswerPenalty = Math.min(20, quickRatio * 35);

            // خصم للأنماط العشوائية (أكثر صرامة)
            const randomPatternPenalty = Math.min(15, randomAnswerPattern * 6);

            // خصم للتناقضات (متدرج)
            const contradictionPenalty = Math.min(18, contradictionFlags.length * 4);

            // خصم لعدم الاتساق (محسن)
            const consistencyPenalty = ((100 - consistencyScore) / 100) * 25;

            // خصم للأبعاد غير الواضحة
            const unclearDimensionsCount = dimensionResults.filter(d => d.clarity < 15).length;
            const unclearPenalty = unclearDimensionsCount * 5;

            // حساب الثقة النهائية
            const finalConfidence = baseConfidence
                + clarityBonus
                + questionBonus
                + pathCompletionBonus
                + qualityBonus
                + pathDiversityBonus
                - quickAnswerPenalty
                - randomPatternPenalty
                - contradictionPenalty
                - consistencyPenalty
                - unclearPenalty;

            // تطبيق حدود واقعية للثقة
            let confidence = Math.round(finalConfidence);

            // تطبيق قواعد إضافية للثقة
            if (quickRatio > 0.6) confidence = Math.min(confidence, 75); // حد أقصى للإجابات السريعة
            if (contradictionFlags.length > 5) confidence = Math.min(confidence, 70); // حد أقصى للتناقضات
            if (avgClarity < 20) confidence = Math.min(confidence, 80); // حد أقصى للوضوح المنخفض
            if (totalQuestions < 30) confidence = Math.min(confidence, 85); // حد أقصى للأسئلة القليلة

            confidence = Math.min(98, Math.max(55, confidence)); // حدود نهائية واقعية

            console.log('تفاصيل حساب الثقة المحسن:', {
                baseConfidence,
                clarityBonus: clarityBonus.toFixed(1),
                questionBonus: questionBonus.toFixed(1),
                pathCompletionBonus: pathCompletionBonus.toFixed(1),
                qualityBonus: qualityBonus.toFixed(1),
                pathDiversityBonus,
                quickAnswerPenalty: quickAnswerPenalty.toFixed(1),
                randomPatternPenalty: randomPatternPenalty.toFixed(1),
                contradictionPenalty: contradictionPenalty.toFixed(1),
                consistencyPenalty: consistencyPenalty.toFixed(1),
                unclearPenalty,
                finalConfidence: confidence,
                avgClarity: avgClarity.toFixed(1),
                quickRatio: (quickRatio * 100).toFixed(1) + '%'
            });

            return confidence;
        }

        function detectContradictions() {
            contradictionFlags = [];

            // جمع جميع الإجابات من كل المسارات
            const allAnswers = [];
            Object.values(allPathAnswers).forEach(pathAnswers => {
                allAnswers.push(...pathAnswers);
            });

            if (allAnswers.length === 0) {
                consistencyScore = 100;
                return;
            }

            // تحليل أنماط الإجابة لكل بُعد
            const dimensionScores = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };
            const dimensionCounts = { E: 0, I: 0, S: 0, N: 0, T: 0, F: 0, J: 0, P: 0 };

            allAnswers.forEach(answer => {
                if (typeof answer.dimension === 'string' && dimensionScores.hasOwnProperty(answer.dimension)) {
                    dimensionScores[answer.dimension]++;
                    dimensionCounts[answer.dimension]++;
                } else if (answer.dimension && (typeof answer.dimension === 'object' || answer.dimension.includes(':'))) {
                    // معالجة الإجابات المعقدة
                    try {
                        let dimensionData;
                        if (answer.dimension.includes(':')) {
                            dimensionData = {};
                            const parts = answer.dimension.split(',');
                            parts.forEach(part => {
                                const [dim, score] = part.split(':');
                                if (dimensionScores.hasOwnProperty(dim)) {
                                    dimensionData[dim] = parseInt(score);
                                }
                            });
                        } else {
                            dimensionData = JSON.parse(answer.dimension);
                        }

                        Object.keys(dimensionData).forEach(dim => {
                            if (dimensionScores.hasOwnProperty(dim)) {
                                dimensionScores[dim] += dimensionData[dim];
                                dimensionCounts[dim]++;
                            }
                        });
                    } catch (e) {
                        console.log('Could not parse complex dimension for contradiction detection');
                    }
                }
            });

            // كشف التناقضات في الوقت
            const timings = allAnswers.map(a => a.timeSpent).filter(t => t > 0);
            if (timings.length > 10) {
                const avgTime = timings.reduce((sum, t) => sum + t, 0) / timings.length;
                const stdDev = Math.sqrt(timings.reduce((sum, t) => sum + Math.pow(t - avgTime, 2), 0) / timings.length);

                const veryFast = timings.filter(t => t < 2).length;
                const verySlow = timings.filter(t => t > avgTime + (2 * stdDev)).length;
                const inconsistentTiming = (veryFast + verySlow) / timings.length;

                if (inconsistentTiming > 0.3) { // أكثر من 30% إجابات غير متسقة زمنياً
                    contradictionFlags.push('timing_inconsistency');
                }
            }

            // كشف التناقضات في الأبعاد المتضادة
            const contradictoryPairs = [
                ['E', 'I'], ['S', 'N'], ['T', 'F'], ['J', 'P']
            ];

            contradictoryPairs.forEach(([dim1, dim2]) => {
                const score1 = dimensionScores[dim1];
                const score2 = dimensionScores[dim2];
                const total = score1 + score2;

                if (total > 5) { // فقط إذا كان هناك عدد كافٍ من الإجابات
                    const difference = Math.abs(score1 - score2);
                    const ratio = difference / total;

                    // إذا كانت النتائج متقاربة جداً (أقل من 10% فرق) مع عدد كبير من الإجابات
                    if (ratio < 0.1 && total > 15) {
                        contradictionFlags.push(`dimension_balance_${dim1}_${dim2}`);
                    }

                    // كشف التذبذب الشديد (تغيير مفاجئ في النمط)
                    const recentAnswers = allAnswers.slice(-Math.min(10, Math.floor(allAnswers.length / 2)));
                    let recentDim1 = 0, recentDim2 = 0;

                    recentAnswers.forEach(answer => {
                        if (answer.dimension === dim1) recentDim1++;
                        if (answer.dimension === dim2) recentDim2++;
                    });

                    const recentTotal = recentDim1 + recentDim2;
                    if (recentTotal > 3) {
                        const overallRatio = score1 / (score1 + score2);
                        const recentRatio = recentDim1 / (recentDim1 + recentDim2);

                        if (Math.abs(overallRatio - recentRatio) > 0.4) { // تغيير كبير في النمط
                            contradictionFlags.push(`pattern_shift_${dim1}_${dim2}`);
                        }
                    }
                }
            });

            // كشف الإجابات العشوائية المحتملة
            if (allAnswers.length > 20) {
                const pathConsistency = {};
                Object.keys(allPathAnswers).forEach(pathNum => {
                    const pathAnswers = allPathAnswers[pathNum];
                    if (pathAnswers.length > 5) {
                        const pathTimings = pathAnswers.map(a => a.timeSpent).filter(t => t > 0);
                        const avgPathTime = pathTimings.reduce((sum, t) => sum + t, 0) / pathTimings.length;
                        const veryQuickInPath = pathTimings.filter(t => t < 3).length;

                        pathConsistency[pathNum] = {
                            avgTime: avgPathTime,
                            quickRatio: veryQuickInPath / pathTimings.length
                        };
                    }
                });

                // إذا كان هناك مسار واحد أو أكثر بنسبة إجابات سريعة عالية
                const suspiciousPaths = Object.values(pathConsistency).filter(p => p.quickRatio > 0.6);
                if (suspiciousPaths.length > 0) {
                    contradictionFlags.push('potential_random_answers');
                }
            }

            // حساب نقاط الاتساق المحسن
            consistencyScore = 100;

            // خصم للإجابات السريعة المفرطة
            const quickRatio = allAnswers.length > 0 ? quickAnswerCount / allAnswers.length : 0;
            if (quickRatio > 0.3) consistencyScore -= Math.min(25, quickRatio * 50);

            // خصم للأنماط العشوائية
            if (randomAnswerPattern > 2) consistencyScore -= Math.min(20, randomAnswerPattern * 8);

            // خصم للتناقضات
            if (contradictionFlags.length > 0) {
                const contradictionPenalty = Math.min(30, contradictionFlags.length * 8);
                consistencyScore -= contradictionPenalty;
            }

            // مكافأة للاتساق الزمني
            if (timings.length > 10) {
                const avgTime = timings.reduce((sum, t) => sum + t, 0) / timings.length;
                const consistentTimings = timings.filter(t => t >= avgTime * 0.5 && t <= avgTime * 2).length;
                const timeConsistencyRatio = consistentTimings / timings.length;

                if (timeConsistencyRatio > 0.7) {
                    consistencyScore += 5; // مكافأة صغيرة للاتساق الزمني
                }
            }

            consistencyScore = Math.max(30, Math.min(100, consistencyScore));

            console.log('تحليل التناقضات:', {
                contradictionFlags,
                quickRatio: (quickRatio * 100).toFixed(1) + '%',
                randomPatterns: randomAnswerPattern,
                consistencyScore
            });
        }

        function showDimensionsAnalysis() {
            const dimensionsContainer = document.getElementById('dimensionsAnalysis');

            // جمع جميع الإجابات وحساب الأوزان المحسنة
            const allAnswers = getAllAnswers();
            const dimensionWeights = calculateDimensionWeights(allAnswers);

            const dimensions = [
                {
                    name: 'مصدر الطاقة',
                    dims: ['E', 'I'],
                    labels: ['انبساط (E)', 'انطواء (I)'],
                    icon: '⚡'
                },
                {
                    name: 'جمع المعلومات',
                    dims: ['S', 'N'],
                    labels: ['حسّي (S)', 'حدسي (N)'],
                    icon: '🔍'
                },
                {
                    name: 'اتخاذ القرارات',
                    dims: ['T', 'F'],
                    labels: ['تفكير (T)', 'شعور (F)'],
                    icon: '⚖️'
                },
                {
                    name: 'نمط الحياة',
                    dims: ['J', 'P'],
                    labels: ['حكم (J)', 'إدراك (P)'],
                    icon: '📅'
                }
            ];

            dimensionsContainer.innerHTML = dimensions.map((dim, index) => {
                const result = calculateDimensionType(dim.dims, dimensionWeights);
                const [dim1, dim2] = dim.dims;
                const [label1, label2] = dim.labels;

                // حساب النسب المئوية بناءً على الأوزان المحسنة
                const score1 = result.scores[dim1];
                const score2 = result.scores[dim2];
                const total = score1 + score2;

                let percent1, percent2, dominant, dominantPercent, confidenceText, confidenceColor;

                if (total > 0) {
                    percent1 = Math.round((score1 / total) * 100);
                    percent2 = 100 - percent1;
                    dominant = percent1 > percent2 ? label1 : percent2 > percent1 ? label2 : 'متوازن';
                    dominantPercent = Math.max(percent1, percent2);
                } else {
                    percent1 = percent2 = 50;
                    dominant = 'غير محدد';
                    dominantPercent = 50;
                }

                // تحديد لون ونص الثقة
                switch (result.confidence) {
                    case 'high':
                        confidenceText = 'ثقة عالية';
                        confidenceColor = 'text-green-600 bg-green-100';
                        break;
                    case 'medium':
                        confidenceText = 'ثقة متوسطة';
                        confidenceColor = 'text-blue-600 bg-blue-100';
                        break;
                    case 'low':
                        confidenceText = 'ثقة منخفضة';
                        confidenceColor = 'text-yellow-600 bg-yellow-100';
                        break;
                    case 'balanced':
                        confidenceText = 'متوازن';
                        confidenceColor = 'text-purple-600 bg-purple-100';
                        break;
                    default:
                        confidenceText = 'غير محدد';
                        confidenceColor = 'text-gray-600 bg-gray-100';
                }

                // تحديد لون الشريط بناءً على مستوى الوضوح
                let barColorClass;
                if (result.difference >= 40) {
                    barColorClass = 'from-green-500 to-green-600'; // واضح جداً
                } else if (result.difference >= 20) {
                    barColorClass = 'from-blue-500 to-blue-600'; // واضح
                } else if (result.difference >= 10) {
                    barColorClass = 'from-yellow-500 to-yellow-600'; // متوسط
                } else {
                    barColorClass = 'from-gray-500 to-gray-600'; // متوازن
                }

                return `
                    <div class="bg-white p-5 rounded-lg border-2 border-gray-200 hover:border-blue-300 transition-all duration-300 shadow-sm hover:shadow-md">
                        <div class="flex justify-between items-start mb-3">
                            <div class="flex items-center">
                                <span class="text-xl ml-2">${dim.icon}</span>
                                <h5 class="font-semibold text-gray-800">${dim.name}</h5>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-800">${dominant}</div>
                                <div class="text-xs ${confidenceColor} px-2 py-1 rounded-full font-medium">${confidenceText}</div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <div class="flex items-center justify-between mb-2 text-sm text-gray-600">
                                <span class="font-medium">${label1}</span>
                                <span class="font-medium">${label2}</span>
                            </div>
                            <div class="w-full bg-blue-200 rounded-full h-4 mb-2 relative overflow-hidden">
                                <div class="bg-gradient-to-r ${barColorClass} h-4 rounded-full transition-all duration-1000 shadow-inner" 
                                     style="width: ${percent1}%"></div>
                                ${result.difference < 10 ? `
                                    <div class="absolute top-0 left-1/2 transform -translate-x-1/2 w-1 h-4 bg-white opacity-80"></div>
                                ` : ''}
                            </div>
                            <div class="flex justify-between text-xs font-medium">
                                <span class="text-gray-700">${percent1}%</span>
                                <span class="text-gray-700">${percent2}%</span>
                            </div>
                        </div>
                       
                `;
            }).join('');
            console.log("JJJJJJJJJJJJJJJJJJJJJJJ", personality.name, type)
        }

        function showAdvancedAnalytics() {
            // الرسم البياني الطولي المطور مع النسب والشرح
            const scoresContainer = document.getElementById('scoresChart');
            console.log(scores)

            // تجميع الأبعاد في أزواج متضادة مع معلومات شاملة
            const dimensionPairs = [
                {
                    name: 'مصدر الطاقة',
                    icon: '⚡',
                    color: 'blue',
                    dimensions: [
                        {
                            key: 'E',
                            name: 'الانبساط',
                            fullName: 'الانبساط (Extraversion)',
                            value: scores.E,
                            description: 'يستمد طاقته من التفاعل مع العالم الخارجي والأشخاص',
                            characteristics: ['يحب المناسبات الاجتماعية', 'يفكر بصوت عالٍ', 'يشعر بالحيوية مع الآخرين', 'يبادر بالحديث'],
                            gradient: 'from-blue-400 to-blue-600'
                        },
                        {
                            key: 'I',
                            name: 'الانطواء',
                            fullName: 'الانطواء (Introversion)',
                            value: scores.I,
                            description: 'يستمد طاقته من العالم الداخلي والتأمل الذاتي',
                            characteristics: ['يفضل الأنشطة الهادئة', 'يفكر قبل التحدث', 'يحتاج وقت منفرد', 'يركز بعمق'],
                            gradient: 'from-blue-300 to-blue-500'
                        }
                    ]
                },
                {
                    name: 'جمع المعلومات',
                    icon: '🔍',
                    color: 'green',
                    dimensions: [
                        {
                            key: 'S',
                            name: 'الحسّي',
                            fullName: 'الحسّي (Sensing)',
                            value: scores.S,
                            description: 'يركز على الحقائق والتفاصيل الملموسة والخبرة العملية',
                            characteristics: ['يثق في الخبرة المثبتة', 'يحب التفاصيل الدقيقة', 'يفضل الحلول العملية', 'يركز على الحاضر'],
                            gradient: 'from-green-400 to-green-600'
                        },
                        {
                            key: 'N',
                            name: 'الحدسي',
                            fullName: 'الحدسي (Intuition)',
                            value: scores.N,
                            description: 'يركز على الأنماط والإمكانيات المستقبلية والأفكار المجردة',
                            characteristics: ['يثق في الحدس', 'يحب الأفكار الجديدة', 'يفضل الحلول الإبداعية', 'يركز على المستقبل'],
                            gradient: 'from-green-300 to-green-500'
                        }
                    ]
                },
                {
                    name: 'اتخاذ القرارات',
                    icon: '⚖️',
                    color: 'purple',
                    dimensions: [
                        {
                            key: 'T',
                            name: 'التفكير',
                            fullName: 'التفكير (Thinking)',
                            value: scores.T,
                            description: 'يتخذ القرارات بناءً على التحليل المنطقي والموضوعية',
                            characteristics: ['يقدر العدالة', 'يحلل بموضوعية', 'يركز على الكفاءة', 'يقدم النقد البناء'],
                            gradient: 'from-purple-400 to-purple-600'
                        },
                        {
                            key: 'F',
                            name: 'الشعور',
                            fullName: 'الشعور (Feeling)',
                            value: scores.F,
                            description: 'يتخذ القرارات بناءً على القيم الشخصية والتأثير على الآخرين',
                            characteristics: ['يقدر الانسجام', 'يراعي المشاعر', 'يركز على القيم', 'يقدم الدعم العاطفي'],
                            gradient: 'from-purple-300 to-purple-500'
                        }
                    ]
                },
                {
                    name: 'نمط الحياة',
                    icon: '📅',
                    color: 'pink',
                    dimensions: [
                        {
                            key: 'J',
                            name: 'الحكم',
                            fullName: 'الحكم (Judging)',
                            value: scores.J,
                            description: 'يفضل الحياة المنظمة والمخططة مع قرارات سريعة',
                            characteristics: ['يحب التخطيط المسبق', 'يلتزم بالمواعيد', 'يفضل الاستقرار', 'ينهي المهام مبكراً'],
                            gradient: 'from-pink-400 to-pink-600'
                        },
                        {
                            key: 'P',
                            name: 'الإدراك',
                            fullName: 'الإدراك (Perceiving)',
                            value: scores.P,
                            description: 'يفضل الحياة المرنة والعفوية مع خيارات مفتوحة',
                            characteristics: ['يحب المرونة', 'يتكيف مع التغيير', 'يفضل العفوية', 'يعمل تحت الضغط'],
                            gradient: 'from-pink-300 to-pink-500'
                        }
                    ]
                }
            ];

            const totalScore = Object.values(scores).reduce((sum, score) => sum + score, 0);

            scoresContainer.innerHTML = `
                <div class="bg-gradient-to-br from-indigo-50 via-white to-purple-50 p-8 rounded-2xl border-2 border-indigo-200 shadow-2xl relative overflow-hidden">
                    <!-- خلفية متحركة -->
                    <div class="absolute inset-0 opacity-5">
                        <div class="absolute inset-0 bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 animate-pulse"></div>
                    </div>
                    
                    <div class="relative z-10">
                        <h5 class="text-2xl font-bold text-indigo-800 mb-6 text-center flex items-center justify-center">
                            <span class="text-3xl ml-3 animate-bounce">📊</span>
                            الرسم البياني التفصيلي للأبعاد الشخصية
                        </h5>
                        
                        <!-- مؤشر الأداء العام -->
                        <div class="text-center mb-8">
                            <div class="inline-flex items-center bg-gradient-to-r from-indigo-500 to-purple-600 text-white px-6 py-3 rounded-full shadow-lg">
                                <span class="text-lg font-bold ml-2">🏆</span>
                                <span class="text-lg font-bold">إجمالي النقاط: ${totalScore}</span>
                            </div>
                        </div>
                        
                        <!-- الرسم البياني الطولي للأبعاد -->
                        <div class="space-y-8">
                            ${dimensionPairs.map((pair, pairIndex) => {
                const dim1 = pair.dimensions[0];
                const dim2 = pair.dimensions[1];
                const pairTotal = dim1.value + dim2.value;
                const dim1Percentage = pairTotal > 0 ? Math.round((dim1.value / pairTotal) * 100) : 50;
                const dim2Percentage = 100 - dim1Percentage;
                const globalDim1Percentage = totalScore > 0 ? Math.round((dim1.value / totalScore) * 100) : 0;
                const globalDim2Percentage = totalScore > 0 ? Math.round((dim2.value / totalScore) * 100) : 0;

                // تحديد البُعد المهيمن
                const dominantDim = dim1.value > dim2.value ? dim1 : dim2.value > dim1.value ? dim2 : null;
                const isDominant = dominantDim !== null;
                const dominanceStrength = isDominant ? Math.abs(dim1Percentage - dim2Percentage) : 0;

                let dominanceLevel = '';
                let dominanceColor = '';
                if (dominanceStrength >= 70) {
                    dominanceLevel = 'مهيمن بقوة';
                    dominanceColor = 'text-green-600 bg-green-100';
                } else if (dominanceStrength >= 50) {
                    dominanceLevel = 'مهيمن';
                    dominanceColor = 'text-blue-600 bg-blue-100';
                } else if (dominanceStrength >= 30) {
                    dominanceLevel = 'ميل طفيف';
                    dominanceColor = 'text-yellow-600 bg-yellow-100';
                } else {
                    dominanceLevel = 'متوازن';
                    dominanceColor = 'text-purple-600 bg-purple-100';
                }

                return `
                                    <div class="bg-gradient-to-r from-white to-${pair.color}-50 border-2 border-${pair.color}-200 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-500 transform hover:scale-[1.02]" 
                                         style="animation: slideInFromLeft 0.8s ease-out ${pairIndex * 300}ms both;">
                                        
                                        <!-- عنوان البُعد -->
                                        <div class="flex items-center justify-between mb-6">
                                            <div class="flex items-center">
                                                <span class="text-3xl ml-3">${pair.icon}</span>
                                                <div>
                                                    <h6 class="text-xl font-bold text-${pair.color}-800">${pair.name}</h6>
                                                    <div class="text-sm text-gray-600">إجمالي النقاط: ${pairTotal}</div>
                                                </div>
                                            </div>
                                            <div class="text-right">
                                                <div class="px-3 py-1 rounded-full text-sm font-bold ${dominanceColor}">
                                                    ${dominanceLevel}
                                                </div>
                                                ${isDominant ? `
                                                    <div class="text-xs text-gray-600 mt-1">
                                                        ${dominantDim.name}: ${dominanceStrength}%
                                                    </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                        
                                        <!-- الرسم البياني الطولي -->
                                        <div class="grid md:grid-cols-2 gap-6">
                                            ${pair.dimensions.map((dim, dimIndex) => {
                    const isFirst = dimIndex === 0;
                    const percentage = isFirst ? dim1Percentage : dim2Percentage;
                    const globalPercentage = isFirst ? globalDim1Percentage : globalDim2Percentage;
                    const maxHeight = 200; // الحد الأقصى للارتفاع بالبكسل
                    const barHeight = Math.max((percentage / 100) * maxHeight, 20);
                    const animationDelay = pairIndex * 300 + dimIndex * 150;

                    return `
                                                    <div class="bg-white rounded-xl p-4 border border-${pair.color}-200 shadow-md hover:shadow-lg transition-all duration-300 group">
                                                        <!-- معلومات البُعد -->
                                                        <div class="text-center mb-4">
                                                            <div class="text-lg font-bold text-${pair.color}-800 mb-1">${dim.fullName}</div>
                                                            <div class="text-sm text-gray-600 leading-relaxed mb-3">${dim.description}</div>
                                                            
                                                            <!-- النقاط والنسب -->
                                                            <div class="flex justify-center items-center space-x-4 space-x-reverse mb-4">
                                                                <div class="text-center">
                                                                    <div class="text-2xl font-bold text-${pair.color}-700">${dim.value}</div>
                                                                    <div class="text-xs text-gray-500">نقطة</div>
                                                                </div>
                                                                <div class="text-center">
                                                                    <div class="text-xl font-bold text-${pair.color}-600">${percentage}%</div>
                                                                    <div class="text-xs text-gray-500">من البُعد</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        
                                                        <!-- العمود الطولي -->
                                                        <div class="flex justify-center mb-4">
                                                            <div class="relative">
                                                                <!-- خلفية العمود -->
                                                                <div class="w-16 bg-gray-200 rounded-full relative overflow-hidden shadow-inner" style="height: ${maxHeight}px;">
                                                                    <!-- العمود المملوء -->
                                                                    <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t ${dim.gradient} rounded-full transition-all duration-1500 shadow-lg group-hover:shadow-xl" 
                                                                         style="height: ${barHeight}px;">
                                                                        
                                                                        <!-- تأثيرات بصرية -->
                                                                        <div class="absolute inset-0 bg-gradient-to-t from-transparent via-white/20 to-white/40 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                                                                        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                                                                        
                                                                        <!-- نقاط متحركة -->
                                                                        <div class="absolute inset-0 opacity-30">
                                                                            <div class="absolute top-2 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-white rounded-full animate-ping" style="animation-delay: ${animationDelay}ms;"></div>
                                                                            <div class="absolute bottom-2 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-white rounded-full animate-ping" style="animation-delay: ${animationDelay + 500}ms;"></div>
                                                                        </div>
                                                                    </div>
                                                                    
                                                                    <!-- مؤشر النسبة -->
                                                                    <div class="absolute top-2 left-1/2 transform -translate-x-1/2 bg-white text-${pair.color}-800 text-xs font-bold px-2 py-1 rounded-full shadow-md border border-${pair.color}-200 group-hover:bg-${pair.color}-100 transition-all duration-300">
                                                                        ${percentage}%
                                                                    </div>
                                                                </div>
                                                                
                                                                <!-- مقياس جانبي -->
                                                                <div class="absolute right-full mr-2 top-0 h-full flex flex-col justify-between text-xs text-gray-500">
                                                                    <span>100%</span>
                                                                    <span>75%</span>
                                                                    <span>50%</span>
                                                                    <span>25%</span>
                                                                    <span>0%</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        
                                                        <!-- الخصائص -->
                                                        <div class="bg-${pair.color}-50 rounded-lg p-3">
                                                            <div class="text-sm font-bold text-${pair.color}-800 mb-2">✨ الخصائص المميزة:</div>
                                                            <ul class="text-xs text-${pair.color}-700 space-y-1">
                                                                ${dim.characteristics.map(char => `
                                                                    <li class="flex items-center">
                                                                        <span class="w-1 h-1 bg-${pair.color}-500 rounded-full ml-2 flex-shrink-0"></span>
                                                                        ${char}
                                                                    </li>
                                                                `).join('')}
                                                            </ul>
                                                        </div>
                                                    </div>
                                                `;
                }).join('')}
                                        </div>
                                        
                                        <!-- مقارنة البُعدين -->
                                        <div class="mt-6 bg-gradient-to-r from-${pair.color}-100 to-white rounded-xl p-4 border border-${pair.color}-200">
                                            <div class="text-center mb-3">
                                                <div class="text-sm font-bold text-${pair.color}-800 mb-2">📊 مقارنة ${pair.name}</div>
                                                <div class="flex items-center justify-center space-x-4 space-x-reverse">
                                                    <div class="text-center">
                                                        <div class="font-bold text-${pair.color}-700">${dim1.name}</div>
                                                        <div class="text-lg font-bold text-${pair.color}-600">${dim1Percentage}%</div>
                                                    </div>
                                                    <div class="text-2xl">⚖️</div>
                                                    <div class="text-center">
                                                        <div class="font-bold text-${pair.color}-700">${dim2.name}</div>
                                                        <div class="text-lg font-bold text-${pair.color}-600">${dim2Percentage}%</div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <!-- شريط المقارنة الأفقي -->
                                            <div class="relative">
                                                <div class="w-full bg-gray-200 rounded-full h-4 overflow-hidden shadow-inner">
                                                    <div class="flex h-full">
                                                        <div class="bg-gradient-to-r ${dim1.gradient} transition-all duration-1500" 
                                                             style="width: ${dim1Percentage}%;"></div>
                                                        <div class="bg-gradient-to-r ${dim2.gradient} transition-all duration-1500" 
                                                             style="width: ${dim2Percentage}%;"></div>
                                                    </div>
                                                </div>
                                                <div class="flex justify-between text-xs text-gray-600 mt-1">
                                                    <span>${dim1.key}: ${dim1.value} نقطة</span>
                                                    <span>${dim2.key}: ${dim2.value} نقطة</span>
                                                </div>
                                            </div>
                                            
                                            <!-- تفسير النتيجة -->
                                            <div class="mt-3 text-center">
                                                ${isDominant ? `
                                                    <div class="text-sm text-${pair.color}-700">
                                                        <strong>النتيجة:</strong> لديك ميل واضح نحو <strong>${dominantDim.name}</strong> 
                                                        بنسبة <strong>${dominanceStrength}%</strong> في ${pair.name}
                                                    </div>
                                                ` : `
                                                    <div class="text-sm text-purple-700">
                                                        <strong>النتيجة:</strong> لديك توازن ممتاز في ${pair.name} 
                                                        مما يمنحك مرونة في التكيف مع المواقف المختلفة
                                                    </div>
                                                `}
                                            </div>
                                        </div>
                                    </div>
                                `;
            }).join('')}
                        </div>
                        
                        <!-- ملخص إجمالي -->
                        <div class="mt-8 bg-gradient-to-r from-indigo-100 to-purple-100 border-2 border-indigo-300 rounded-2xl p-6">
                            <h6 class="text-xl font-bold text-indigo-800 mb-4 text-center flex items-center justify-center">
                                <span class="text-2xl ml-2">🎯</span>
                                الملخص الإجمالي للأبعاد
                            </h6>
                            
                            <div class="grid md:grid-cols-2 gap-6">
                                <div class="bg-white rounded-xl p-4 shadow-md">
                                    <h7 class="font-bold text-indigo-800 mb-3 flex items-center">
                                        <span class="ml-2">📈</span>
                                        الأبعاد المهيمنة
                                    </h7>
                                    <div class="space-y-2">
                                        ${dimensionPairs.map(pair => {
                const dim1 = pair.dimensions[0];
                const dim2 = pair.dimensions[1];
                const dominant = dim1.value > dim2.value ? dim1 : dim2.value > dim1.value ? dim2 : null;
                const strength = dominant ? Math.abs(dim1.value - dim2.value) : 0;

                return `
                                                <div class="flex justify-between items-center p-2 bg-${pair.color}-50 rounded-lg">
                                                    <span class="text-sm font-medium text-${pair.color}-800">${pair.name}:</span>
                                                    <span class="text-sm font-bold text-${pair.color}-700">
                                                        ${dominant ? `${dominant.name} (+${strength})` : 'متوازن'}
                                                    </span>
                                                </div>
                                            `;
            }).join('')}
                                    </div>
                                </div>
                                
                                <div class="bg-white rounded-xl p-4 shadow-md">
                                    <h7 class="font-bold text-indigo-800 mb-3 flex items-center">
                                        <span class="ml-2">🏆</span>
                                        أعلى النقاط
                                    </h7>
                                    <div class="space-y-2">
                                        ${Object.entries(scores)
                    .sort(([, a], [, b]) => b - a)
                    .slice(0, 4)
                    .map(([key, value], index) => {
                        const dimInfo = dimensionPairs
                            .flatMap(p => p.dimensions)
                            .find(d => d.key === key);
                        const percentage = Math.round((value / totalScore) * 100);
                        const medals = ['🥇', '🥈', '🥉', '🏅'];

                        return `
                                                    <div class="flex justify-between items-center p-2 bg-gradient-to-r from-yellow-50 to-orange-50 rounded-lg">
                                                        <div class="flex items-center">
                                                            <span class="ml-2">${medals[index]}</span>
                                                            <span class="text-sm font-medium text-gray-800">${dimInfo?.name || key}:</span>
                                                        </div>
                                                        <span class="text-sm font-bold text-orange-700">${value} نقطة (${percentage}%)</span>
                                                    </div>
                                                `;
                    }).join('')}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <style>
                    @keyframes slideInFromLeft {
                        from {
                            opacity: 0;
                            transform: translateX(-50px) scale(0.95);
                        }
                        to {
                            opacity: 1;
                            transform: translateX(0) scale(1);
                        }
                    }
                    
                    @keyframes fillUp {
                        from {
                            height: 0;
                        }
                        to {
                            height: var(--target-height);
                        }
                    }
                    
                    @keyframes expandWidth {
                        from {
                            width: 0%;
                        }
                        to {
                            width: var(--target-width);
                        }
                    }
                </style>
            `;

            // Clarity Chart محسن - مربعات مصغرة تحت الرسم البياني
            const clarityContainer = document.getElementById('clarityChart');
            const dimensions = [
                {
                    name: 'مصدر الطاقة',
                    clarity: Math.abs(scores.E - scores.I),
                    icon: '⚡',
                    dominant: scores.E > scores.I ? 'انبساط' : scores.I > scores.E ? 'انطواء' : 'متوازن',
                    total: scores.E + scores.I,
                    color: 'blue'
                },
                {
                    name: 'جمع المعلومات',
                    clarity: Math.abs(scores.S - scores.N),
                    icon: '🔍',
                    dominant: scores.S > scores.N ? 'حسّي' : scores.N > scores.S ? 'حدسي' : 'متوازن',
                    total: scores.S + scores.N,
                    color: 'green'
                },
                {
                    name: 'اتخاذ القرارات',
                    clarity: Math.abs(scores.T - scores.F),
                    icon: '⚖️',
                    dominant: scores.T > scores.F ? 'تفكير' : scores.F > scores.T ? 'شعور' : 'متوازن',
                    total: scores.T + scores.F,
                    color: 'purple'
                },
                {
                    name: 'نمط الحياة',
                    clarity: Math.abs(scores.J - scores.P),
                    icon: '📅',
                    dominant: scores.J > scores.P ? 'حكم' : scores.P > scores.J ? 'إدراك' : 'متوازن',
                    total: scores.J + scores.P,
                    color: 'pink'
                }
            ];

            clarityContainer.innerHTML = `
                <div class="bg-gradient-to-br from-purple-50 via-white to-pink-50 p-4 rounded-xl border-2 border-purple-200 shadow-lg">
                    <h5 class="text-lg font-bold text-purple-800 mb-4 text-center flex items-center justify-center">
                        <span class="text-xl ml-2">🎯</span>
                        مستوى وضوح الأبعاد
                    </h5>
                    
                    <!-- مربعات الوضوح المصغرة في شبكة 2x2 -->
                    <div class="grid grid-cols-2 gap-3 mb-4">
                        ${dimensions.map(dim => {
                const actualPercentage = dim.total > 0 ? Math.round((dim.clarity / dim.total) * 100) : 0;

                let clarityLevel, colorClass, bgClass, textClass;

                if (actualPercentage >= 70) {
                    clarityLevel = 'واضح جداً';
                    colorClass = 'bg-gradient-to-r from-green-500 to-green-600';
                    bgClass = `bg-${dim.color}-50 border-green-300`;
                    textClass = 'text-green-800';
                } else if (actualPercentage >= 50) {
                    clarityLevel = 'واضح';
                    colorClass = 'bg-gradient-to-r from-blue-500 to-blue-600';
                    bgClass = `bg-${dim.color}-50 border-blue-300`;
                    textClass = 'text-blue-800';
                } else if (actualPercentage >= 30) {
                    clarityLevel = 'متوسط';
                    colorClass = 'bg-gradient-to-r from-yellow-500 to-yellow-600';
                    bgClass = `bg-${dim.color}-50 border-yellow-300`;
                    textClass = 'text-yellow-800';
                } else {
                    clarityLevel = 'متوازن';
                    colorClass = 'bg-gradient-to-r from-gray-500 to-gray-600';
                    bgClass = `bg-${dim.color}-50 border-gray-300`;
                    textClass = 'text-gray-800';
                }

                return `
                                <div class="${bgClass} rounded-lg p-3 border-2 hover:shadow-md transition-all duration-300">
                                    <div class="flex items-center justify-between mb-2">
                                        <div class="flex items-center">
                                            <span class="text-lg ml-2">${dim.icon}</span>
                                            <div>
                                                <div class="font-bold text-${dim.color}-800 text-sm">${dim.name}</div>
                                                <div class="text-xs text-gray-600">${dim.dominant}</div>
                                            </div>
                                        </div>
                                        <div class="text-right">
                                            <div class="font-bold ${textClass} text-sm">${clarityLevel}</div>
                                            <div class="text-xs text-gray-600">${actualPercentage}%</div>
                                        </div>
                                    </div>
                                    
                                    <!-- شريط التقدم المصغر -->
                                    <div class="w-full bg-gray-200 rounded-full h-2 relative overflow-hidden">
                                        <div class="${colorClass} h-2 rounded-full transition-all duration-1000 shadow-inner" 
                                             style="width: ${actualPercentage}%;">
                                        </div>
                                    </div>
                                    
                                    <!-- معلومات إضافية مصغرة -->
                                    <div class="flex justify-between items-center text-xs text-gray-500 mt-1">
                                        <span>فرق: ${dim.clarity}</span>
                                        <span>إجمالي: ${dim.total}</span>
                                    </div>
                                </div>
                            `;
            }).join('')}
                    </div>
                    
                    <!-- ملخص عام مصغر -->
                    <div class="bg-white rounded-lg p-3 border border-purple-200">
                        <div class="text-center">
                            <div class="text-sm font-bold text-purple-800 mb-2">📋 متوسط الوضوح العام</div>
                            <div class="text-lg font-bold text-purple-700">
                                ${Math.round(dimensions.reduce((sum, dim) => {
                const actualPercentage = dim.total > 0 ? (dim.clarity / dim.total) * 100 : 0;
                return sum + actualPercentage;
            }, 0) / dimensions.length)}%
                            </div>
                            <div class="text-xs text-gray-600">من جميع الأبعاد الأربعة</div>
                        </div>
                    </div>
                </div>
            `;
        }

        function showPathPerformance() {
            const pathContainer = document.getElementById('pathPerformance');
            const pathInfo = {
                1: { name: "الشامل", icon: "📊", color: "blue", questions: 24, bgColor: "bg-blue-100", borderColor: "border-blue-300", textColor: "text-blue-800" },
                2: { name: "السريع", icon: "⚡", color: "green", questions: 10, bgColor: "bg-green-100", borderColor: "border-green-300", textColor: "text-green-800" },
                3: { name: "العمل", icon: "💼", color: "purple", questions: 6, bgColor: "bg-purple-100", borderColor: "border-purple-300", textColor: "text-purple-800" },
                4: { name: "العلاقات", icon: "❤️", color: "pink", questions: 6, bgColor: "bg-pink-100", borderColor: "border-pink-300", textColor: "text-pink-800" },
                5: { name: "التأكيد", icon: "✓", color: "orange", questions: 4, bgColor: "bg-orange-100", borderColor: "border-orange-300", textColor: "text-orange-800" }
            };

            pathContainer.innerHTML = Object.keys(pathInfo).map(pathNum => {
                const path = pathInfo[pathNum];
                const pathAnswers = allPathAnswers[pathNum] || [];
                const avgTime = pathAnswers.length > 0 ?
                    Math.round(pathAnswers.reduce((sum, q) => sum + q.timeSpent, 0) / pathAnswers.length) : 0;
                const completed = completedPaths.includes(parseInt(pathNum));

                return `
                    <div class="text-center p-3 ${path.bgColor} rounded-lg border-2 ${path.borderColor} hover:shadow-md transition-all duration-300">
                        <div class="text-xl mb-2">${path.icon}</div>
                        <div class="font-bold ${path.textColor} text-sm mb-1">${path.name}</div>
                        <div class="text-xs text-gray-600 mb-2">${path.questions} سؤال</div>
                        ${completed ? `
                            <div class="text-xs ${path.textColor}">
                                <div class="font-medium bg-white rounded-full px-2 py-1 mb-1">✅ مكتمل</div>
                                <div class="bg-white rounded-full px-2 py-1">متوسط: ${avgTime}ث</div>
                            </div>
                        ` : `
                            <div class="text-xs text-gray-500 bg-gray-100 rounded-full px-2 py-1">غير مكتمل</div>
                        `}
                    </div>
                `;
            }).join('');
        }

        function showTimingStatistics() {
            const timingContainer = document.getElementById('timingStats');
            const totalTime = Math.round((endTime) / 1000);
            const totalMinutes = Math.floor(totalTime / 60);
            const totalSeconds = totalTime % 60;

            // جمع جميع الأوقات من كل المسارات
            const allTimes = [];
            Object.values(allPathAnswers).forEach(pathAnswers => {
                allTimes.push(...pathAnswers.map(q => ({ ...q, timeSpent: q.timeSpent || 0 })));
            });

            const avgActual = allTimes.length > 0 ? Math.round(allTimes.reduce((sum, q) => sum + q.timeSpent, 0) / allTimes.length) : 0;

            // العثور على أسرع وأبطأ سؤال مع تفاصيلهما
            let fastestQ = null;
            let slowestQ = null;

            allTimes.forEach(q => {
                if (q.timeSpent > 0) {
                    if (!fastestQ || q.timeSpent < fastestQ.timeSpent) {
                        fastestQ = q;
                    }
                    if (!slowestQ || q.timeSpent > slowestQ.timeSpent) {
                        slowestQ = q;
                    }
                }
            });

            // حساب إحصائيات إضافية
            const validTimes = allTimes.filter(q => q.timeSpent > 0).map(q => q.timeSpent);
            const quickAnswers = validTimes.filter(t => t < 3).length;
            const slowAnswers = validTimes.filter(t => t > 30).length;
            const medianTime = validTimes.length > 0 ? validTimes.sort((a, b) => a - b)[Math.floor(validTimes.length / 2)] : 0;

            // حساب الوقت لكل مسار
            const pathTimings = {};
            Object.keys(allPathAnswers).forEach(pathNum => {
                const pathAnswers = allPathAnswers[pathNum] || [];
                const pathTotalTime = pathAnswers.reduce((sum, q) => sum + (q.timeSpent || 0), 0);
                const pathAvgTime = pathAnswers.length > 0 ? Math.round(pathTotalTime / pathAnswers.length) : 0;
                pathTimings[pathNum] = {
                    total: pathTotalTime,
                    average: pathAvgTime,
                    questions: pathAnswers.length
                };
            });

            timingContainer.innerHTML = `
                <!-- الإحصائيات الأساسية -->
                <div class="col-span-full">
                    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border-2 border-blue-200 rounded-xl p-6 mb-6">
                        <h4 class="text-xl font-bold text-blue-800 mb-4 text-center">📊 إحصائيات الوقت الشاملة</h4>
                        
                        <div class="grid md:grid-cols-4 gap-4 mb-6">
                            <div class="bg-white p-4 rounded-lg border border-blue-200 text-center">
                                <div class="text-2xl font-bold text-blue-600">${totalMinutes}:${totalSeconds.toString().padStart(2, '0')}</div>
                                <div class="text-sm text-gray-600">الوقت الإجمالي</div>
                                <div class="text-xs text-gray-500 mt-1">${totalTime} ثانية</div>
                            </div>
                            
                            <div class="bg-white p-4 rounded-lg border border-green-200 text-center">
                                <div class="text-2xl font-bold text-green-600">${avgActual}ث</div>
                                <div class="text-sm text-gray-600">متوسط الوقت</div>
                                <div class="text-xs text-gray-500 mt-1">لكل سؤال</div>
                            </div>
                            
                            <div class="bg-white p-4 rounded-lg border border-purple-200 text-center">
                                <div class="text-2xl font-bold text-purple-600">${medianTime}ث</div>
                                <div class="text-sm text-gray-600">الوسيط</div>
                                <div class="text-xs text-gray-500 mt-1">القيمة الوسطى</div>
                            </div>
                            
                            <div class="bg-white p-4 rounded-lg border border-orange-200 text-center">
                                <div class="text-2xl font-bold text-orange-600">${allTimes.length}</div>
                                <div class="text-sm text-gray-600">إجمالي الأسئلة</div>
                                <div class="text-xs text-gray-500 mt-1">تم الإجابة عليها</div>
                            </div>
                        </div>
                        
                        <!-- أسرع وأبطأ سؤال -->
                        <div class="grid md:grid-cols-2 gap-4 mb-6">
                            <div class="bg-gradient-to-r from-green-50 to-emerald-50 border-2 border-green-200 rounded-lg p-4">
                                <div class="flex items-center mb-3">
                                    <span class="text-2xl ml-2">⚡</span>
                                    <h5 class="font-bold text-green-800">أسرع إجابة</h5>
                                </div>
                                ${fastestQ ? `
                                    <div class="space-y-2">
                                        <div class="text-lg font-bold text-green-700">${fastestQ.timeSpent} ثانية</div>
                                        <div class="text-sm text-green-600 bg-white rounded-lg p-2">
                                            <strong>السؤال:</strong> ${fastestQ.question.substring(0, 50)}...
                                        </div>
                                        <div class="text-xs text-green-500">
                                            المسار ${fastestQ.path} - الإجابة: "${fastestQ.answer.substring(0, 30)}..."
                                        </div>
                                    </div>
                                ` : `
                                    <div class="text-green-600">لا توجد بيانات</div>
                                `}
                            </div>
                            
                            <div class="bg-gradient-to-r from-red-50 to-pink-50 border-2 border-red-200 rounded-lg p-4">
                                <div class="flex items-center mb-3">
                                    <span class="text-2xl ml-2">🐌</span>
                                    <h5 class="font-bold text-red-800">أبطأ إجابة</h5>
                                </div>
                                ${slowestQ ? `
                                    <div class="space-y-2">
                                        <div class="text-lg font-bold text-red-700">${slowestQ.timeSpent} ثانية</div>
                                        <div class="text-sm text-red-600 bg-white rounded-lg p-2">
                                            <strong>السؤال:</strong> ${slowestQ.question.substring(0, 50)}...
                                        </div>
                                        <div class="text-xs text-red-500">
                                            المسار ${slowestQ.path} - الإجابة: "${slowestQ.answer.substring(0, 30)}..."
                                        </div>
                                    </div>
                                ` : `
                                    <div class="text-red-600">لا توجد بيانات</div>
                                `}
                            </div>
                        </div>
                        
                        <!-- إحصائيات السرعة -->
                        <div class="bg-white rounded-lg border border-gray-200 p-4 mb-4">
                            <h5 class="font-bold text-gray-800 mb-3">📈 تحليل سرعة الإجابة</h5>
                            <div class="grid grid-cols-3 gap-4 text-center">
                                <div class="p-3 bg-red-50 rounded-lg">
                                    <div class="text-lg font-bold text-red-600">${quickAnswers}</div>
                                    <div class="text-xs text-red-500">إجابات سريعة</div>
                                    <div class="text-xs text-gray-500">(&lt; 3 ثوانٍ)</div>
                                </div>
                                <div class="p-3 bg-green-50 rounded-lg">
                                    <div class="text-lg font-bold text-green-600">${validTimes.length - quickAnswers - slowAnswers}</div>
                                    <div class="text-xs text-green-500">إجابات طبيعية</div>
                                    <div class="text-xs text-gray-500">(3-30 ثانية)</div>
                                </div>
                                <div class="p-3 bg-yellow-50 rounded-lg">
                                    <div class="text-lg font-bold text-yellow-600">${slowAnswers}</div>
                                    <div class="text-xs text-yellow-500">إجابات بطيئة</div>
                                    <div class="text-xs text-gray-500">(&gt; 30 ثانية)</div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- أوقات المسارات -->
                        <div class="bg-white rounded-lg border border-gray-200 p-4">
                            <h5 class="font-bold text-gray-800 mb-3">🛤️ أوقات المسارات</h5>
                            <div class="space-y-2">
                                ${Object.keys(pathTimings).map(pathNum => {
                const pathInfo = {
                    1: { name: "المسار الشامل", icon: "📊", color: "blue" },
                    2: { name: "المسار السريع", icon: "⚡", color: "green" },
                    3: { name: "مسار العمل", icon: "💼", color: "purple" },
                    4: { name: "مسار العلاقات", icon: "❤️", color: "pink" },
                    5: { name: "مسار التأكيد", icon: "✓", color: "orange" }
                };
                const info = pathInfo[pathNum];
                const timing = pathTimings[pathNum];
                const pathMinutes = Math.floor(timing.total / 60);
                const pathSeconds = timing.total % 60;

                return `
                                        <div class="flex items-center justify-between p-2 bg-${info.color}-50 rounded-lg">
                                            <div class="flex items-center">
                                                <span class="text-lg ml-2">${info.icon}</span>
                                                <span class="font-medium text-${info.color}-800">${info.name}</span>
                                            </div>
                                            <div class="text-right">
                                                <div class="text-sm font-bold text-${info.color}-700">
                                                    ${pathMinutes}:${pathSeconds.toString().padStart(2, '0')} دقيقة
                                                </div>
                                                <div class="text-xs text-${info.color}-600">
                                                    متوسط: ${timing.average}ث | ${timing.questions} سؤال
                                                </div>
                                            </div>
                                        </div>
                                    `;
            }).join('')}
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }

        function updateProgress() {
            const percentage = Math.round(((currentQuestion + 1) / currentQuestions.length) * 100);
            document.getElementById('progressText').textContent = `السؤال ${currentQuestion + 1} من ${currentQuestions.length}`;
            document.getElementById('progressBar').style.width = `${percentage}%`;
        }

        function updatePathIndicator() {
            document.getElementById('currentPathName').textContent = pathNames[currentPath];

            for (let i = 1; i <= 5; i++) {
                const indicator = document.getElementById(`pathIndicator${i}`).querySelector('div');
                if (completedPaths.includes(i)) {
                    indicator.style.width = '100%';
                } else if (i === currentPath) {
                    const percentage = Math.round(((currentQuestion + 1) / currentQuestions.length) * 100);
                    indicator.style.width = `${percentage}%`;
                } else {
                    indicator.style.width = '0%';
                }
            }
        }

        function updateBackButton() {
            const backBtn = document.getElementById('backBtn');
            if (backBtn) {
                // Disable back button on first question of first path
                if (currentPath === 1 && currentQuestion === 0) {
                    backBtn.disabled = true;
                } else {
                    backBtn.disabled = false;
                }
            }
        }




    </script>

    <script>(function () { function c() { var b = a.contentDocument || a.contentWindow.document; if (b) { var d = b.createElement('script'); d.innerHTML = "window.__CF$cv$params={r:'98037c92d5f4e8e2',t:'MTc1ODA1ODQ1My4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);"; b.getElementsByTagName('head')[0].appendChild(d) } } if (document.body) { var a = document.createElement('iframe'); a.height = 1; a.width = 1; a.style.position = 'absolute'; a.style.top = 0; a.style.left = 0; a.style.border = 'none'; a.style.visibility = 'hidden'; document.body.appendChild(a); if ('loading' !== document.readyState) c(); else if (window.addEventListener) document.addEventListener('DOMContentLoaded', c); else { var e = document.onreadystatechange || function () { }; document.onreadystatechange = function (b) { e(b); 'loading' !== document.readyState && (document.onreadystatechange = e, c()) } } } })();</script>
</body>

</html>